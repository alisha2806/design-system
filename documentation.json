{
    "pipes": [],
    "interfaces": [
        {
            "name": "IButton",
            "id": "interface-IButton-29ee872a25cdd7eee400441d71afe969",
            "file": "src/stories/button/button-page/button.interface.ts",
            "type": "interface",
            "sourceCode": "import {ButtonTypeEnum} from './button-type.enum';\r\n\r\nexport default interface IButton {\r\n  label: string;\r\n  large: boolean;\r\n  disabled: boolean;\r\n  iconBefore: string;\r\n  iconBeforeWidth: string;\r\n  iconBeforeHeight: string;\r\n  iconAfter: string;\r\n  iconAfterWidth: string;\r\n  iconAfterHeight: string;\r\n  buttonType: ButtonTypeEnum;\r\n}\r\n",
            "properties": [
                {
                    "name": "buttonType",
                    "type": "ButtonTypeEnum",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "disabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "iconAfter",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "iconAfterHeight",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "iconAfterWidth",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "iconBefore",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "iconBeforeHeight",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "iconBeforeWidth",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "large",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IButtonsPage",
            "id": "interface-IButtonsPage-93c8349727c73b504af14134935526ad",
            "file": "src/stories/button/button-page/button-page.component.ts",
            "type": "interface",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\nimport IButton from './button.interface';\r\nimport {KeyValue} from '@angular/common';\r\n\r\ninterface IButtonsPage {\r\n  small: {\r\n    height: string;\r\n    buttons: {\r\n      primary: IButton[];\r\n      secondary: IButton[];\r\n      tertiary: IButton[];\r\n      distructive: IButton[]\r\n    }\r\n  };\r\n  large: {\r\n    height: string;\r\n    buttons: {\r\n      primary: IButton[];\r\n      secondary: IButton[];\r\n      tertiary: IButton[];\r\n      distructive: IButton[]\r\n    }\r\n  };\r\n}\r\n\r\n@Component({\r\n  selector: 'p-button-page',\r\n  templateUrl: './button-page.component.html',\r\n  styleUrls: ['./button-page.component.scss'],\r\n})\r\nexport default class ButtonPageComponent {\r\n  @Input() buttonsPage: IButtonsPage;\r\n\r\n  originalOrder = (a: KeyValue<number, string>, b: KeyValue<number, string>): number => {\r\n    return 0;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "large",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "small",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICheckbox",
            "id": "interface-ICheckbox-92d8f47b73e0c489469123326fd838de",
            "file": "src/stories/checkbox/checkbox.interface.ts",
            "type": "interface",
            "sourceCode": "export default interface ICheckbox {\r\n  label: string;\r\n  ariaLabel: string;\r\n  checked: boolean;\r\n  disabled: boolean;\r\n  selectAll: boolean;\r\n  indeterminate: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "ariaLabel",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "checked",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "disabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "indeterminate",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "selectAll",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "ICheckboxGroup",
            "id": "interface-ICheckboxGroup-a5c02e49a4ab635d8d1e6ad6831fa7f1",
            "file": "src/stories/checkbox/checkbox-group/checkbox-group.interface.ts",
            "type": "interface",
            "sourceCode": "import ICheckbox from '../checkbox.interface';\r\n\r\nexport default interface ICheckboxGroup {\r\n  groupTitle: string;\r\n  checkboxGroup: ICheckbox[];\r\n  error: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "checkboxGroup",
                    "type": "ICheckbox[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "error",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "groupTitle",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IInputNumeric",
            "id": "interface-IInputNumeric-a8a9bd720b33a973f62f539e1673dc7b",
            "file": "src/stories/input-numeric/input-numeric.interface.ts",
            "type": "interface",
            "sourceCode": "import {ValidatorFn} from '@angular/forms';\r\n\r\nexport default interface IInputNumeric {\r\n  type: string;\r\n  label: string;\r\n  ariaLabel: string;\r\n  placeholder: number;\r\n  errorMessage: string;\r\n  disabled: boolean;\r\n  readonly: boolean;\r\n  value: number;\r\n  validators: ValidatorFn[];\r\n  labelLast: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "ariaLabel",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "disabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "errorMessage",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "labelLast",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "placeholder",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "readonly",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "type",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "validators",
                    "type": "ValidatorFn[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "value",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IInputText",
            "id": "interface-IInputText-8c282e88a7dfda980351670b8aadbccd",
            "file": "src/stories/input-text/input-text.interface.ts",
            "type": "interface",
            "sourceCode": "import {ValidatorFn} from '@angular/forms';\r\n\r\nexport default interface IInputText {\r\n  type: string;\r\n  label: string;\r\n  ariaLabel: string;\r\n  placeholder: string;\r\n  errorMessage: string;\r\n  disabled: boolean;\r\n  readonly: boolean;\r\n  value: string;\r\n  validators: ValidatorFn[];\r\n}\r\n",
            "properties": [
                {
                    "name": "ariaLabel",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "disabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "errorMessage",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "placeholder",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "readonly",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "type",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "validators",
                    "type": "ValidatorFn[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "value",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        },
        {
            "name": "IRadioButton",
            "id": "interface-IRadioButton-575f61d51480040b16ac79d3fc959966",
            "file": "src/stories/radio-button/radio-button.interface.ts",
            "type": "interface",
            "sourceCode": "export default interface IRadioButton {\r\n  value: any;\r\n  label: string;\r\n  ariaLabel: string;\r\n  checked: boolean;\r\n  disabled: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "ariaLabel",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "checked",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "disabled",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "label",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "value",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-e3ea1f4631d62652a5623d3ab757b2fc",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\r\n\r\nexport class AppPage {\r\n  async navigateTo(): Promise<unknown> {\r\n    return browser.get(browser.baseUrl);\r\n  }\r\n\r\n  async getTitleText(): Promise<string> {\r\n    return element(by.css('app-root .content span')).getText();\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-feacc190ef255396e90b970916e0ae0e",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "emailFormControl",
                    "defaultValue": "new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ])",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "title",
                    "defaultValue": "'storybooktemplate'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport {FormControl, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'storybooktemplate';\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<form class=\"example-form\">\r\n  <mat-form-field class=\"example-full-width\">\r\n    <mat-label>Email</mat-label>\r\n    <input type=\"email\" matInput [formControl]=\"emailFormControl\" placeholder=\"Ex. pat@example.com\">\r\n    <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\r\n      Please enter a valid email address\r\n    </mat-error>\r\n    <mat-error *ngIf=\"emailFormControl.hasError('required')\">\r\n      Email is <strong>required</strong>\r\n    </mat-error>\r\n  </mat-form-field>\r\n</form>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-dbcea0df04c9c3d904ccd3dd4202676b",
            "file": "src/stories/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonType",
                    "defaultValue": "ButtonTypeEnum.Primary",
                    "line": 19,
                    "type": "ButtonTypeEnum"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "iconAfter",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "iconAfterHeight",
                    "defaultValue": "'auto'",
                    "line": 18,
                    "type": "string"
                },
                {
                    "name": "iconAfterWidth",
                    "defaultValue": "'auto'",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "iconBefore",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "iconBeforeHeight",
                    "defaultValue": "'auto'",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "iconBeforeWidth",
                    "defaultValue": "'auto'",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "label",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "large",
                    "defaultValue": "false",
                    "line": 11,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\nimport {ButtonTypeEnum} from './button-page/button-type.enum';\r\n\r\n@Component({\r\n  selector: 'p-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss'],\r\n})\r\nexport default class ButtonComponent {\r\n  @Input() label: string;\r\n  @Input() large: boolean = false;\r\n  @Input() disabled: boolean = false;\r\n  @Input() iconBefore: string;\r\n  @Input() iconBeforeWidth: string = 'auto';\r\n  @Input() iconBeforeHeight: string = 'auto';\r\n  @Input() iconAfter: string;\r\n  @Input() iconAfterWidth: string = 'auto';\r\n  @Input() iconAfterHeight: string = 'auto';\r\n  @Input() buttonType: ButtonTypeEnum = ButtonTypeEnum.Primary;\r\n\r\n  public get classes(): string[] {\r\n    const classParams = [];\r\n    this.large ? classParams.push('p-btn-large') : classParams.push('p-btn-small');\r\n    this.iconBefore ? classParams.push('p-btn-icon-before') : null;\r\n    this.iconAfter ? classParams.push('p-btn-icon-after') : null;\r\n    classParams.push(`p-btn-${this.buttonType}`);\r\n    return classParams;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../assets/styles/custom\";\r\n\r\n.p-btn {\r\n  @include resetButton;\r\n  font-family: $font-family-basic;\r\n  font-size: $small-font-size;\r\n  font-weight: 500;\r\n  line-height: 19px;\r\n  min-width: 80px;\r\n  padding-right: 23px;\r\n  padding-left: 23px;\r\n  border-radius: 2px;\r\n  white-space: nowrap;\r\n  transition: all 400ms;\r\n\r\n  &-large {\r\n    height: 40px;\r\n  }\r\n\r\n  &-small {\r\n    height: 30px;\r\n  }\r\n\r\n  &:disabled {\r\n    pointer-events: none;\r\n  }\r\n\r\n  &-primary {\r\n    color: $gray-scale-1;\r\n    background-color: $secondary-a-700;\r\n    &:hover {\r\n      background-color: $secondary-a-800;\r\n    }\r\n    &:focus {\r\n      background-color: $secondary-a-800;\r\n    }\r\n    &:disabled {\r\n      color: $gray-scale-600;\r\n      background-color: $secondary-a-50;\r\n    }\r\n  }\r\n\r\n  &-secondary {\r\n    color: $secondary-a-700;\r\n    background-color: $gray-scale-1;\r\n    border: 1px solid $secondary-a-700;\r\n    &:hover {\r\n      background-color: $primary-c-50;\r\n    }\r\n    &:focus {\r\n      background-color: $primary-c-50;\r\n    }\r\n    &:disabled {\r\n      color: $gray-scale-600;\r\n      border-color: $secondary-a-500;\r\n    }\r\n  }\r\n\r\n  &-tertiary {\r\n    color: $secondary-a-700;\r\n    background-color: $gray-scale-1;\r\n    &:hover {\r\n      background-color: $primary-c-50;\r\n    }\r\n    &:focus {\r\n      background-color: $primary-c-50;\r\n    }\r\n    &:disabled {\r\n      color: $gray-scale-600;\r\n    }\r\n  }\r\n\r\n  &-distructive {\r\n    color: $gray-scale-1;\r\n    background-color: $supportive-alert-500;\r\n    &:hover {\r\n      background-color: $supportive-alert-700;\r\n    }\r\n    &:focus {\r\n      background-color: $supportive-alert-700;\r\n    }\r\n    &:disabled {\r\n      color: $gray-scale-600;\r\n      background-color: $supportive-alert-50;\r\n    }\r\n  }\r\n\r\n  // class of the button\r\n  &-icon-before {\r\n    padding-left: 17px;\r\n    .p-btn-label {\r\n      margin-left: 11px;\r\n    }\r\n  }\r\n  // class of the button\r\n  &-icon-after {\r\n    padding-right: 17px;\r\n    .p-btn-label {\r\n      margin-right: 11px;\r\n    }\r\n  }\r\n\r\n  // class of the icon\r\n  &-icon-pre,\r\n  &-icon-post {\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n}\r\n\r\n\r\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 21
                    }
                }
            },
            "templateData": "<button class=\"p-btn\" [ngClass]=\"classes\" [disabled]=\"disabled\">\r\n  <!--<p-icon *ngIf=\"iconBefore\"-->\r\n          <!--class=\"p-btn-icon-pre\"-->\r\n          <!--[name]=\"iconBefore\"-->\r\n          <!--[width]=\"iconBeforeWidth\"-->\r\n          <!--[height]=\"iconBeforeHeight\"></p-icon>-->\r\n  <span class=\"p-btn-label\">{{label}}</span>\r\n  <!--<p-icon *ngIf=\"iconAfter\"-->\r\n          <!--class=\"p-btn-icon-post\"-->\r\n          <!--[name]=\"iconAfter\"-->\r\n          <!--[width]=\"iconAfterWidth\"-->\r\n          <!--[height]=\"iconAfterHeight\"></p-icon>-->\r\n</button>\r\n"
        },
        {
            "name": "ButtonPageComponent",
            "id": "component-ButtonPageComponent-93c8349727c73b504af14134935526ad",
            "file": "src/stories/button/button-page/button-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-button-page",
            "styleUrls": [
                "./button-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonsPage",
                    "line": 32,
                    "type": "IButtonsPage"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "originalOrder",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\nimport IButton from './button.interface';\r\nimport {KeyValue} from '@angular/common';\r\n\r\ninterface IButtonsPage {\r\n  small: {\r\n    height: string;\r\n    buttons: {\r\n      primary: IButton[];\r\n      secondary: IButton[];\r\n      tertiary: IButton[];\r\n      distructive: IButton[]\r\n    }\r\n  };\r\n  large: {\r\n    height: string;\r\n    buttons: {\r\n      primary: IButton[];\r\n      secondary: IButton[];\r\n      tertiary: IButton[];\r\n      distructive: IButton[]\r\n    }\r\n  };\r\n}\r\n\r\n@Component({\r\n  selector: 'p-button-page',\r\n  templateUrl: './button-page.component.html',\r\n  styleUrls: ['./button-page.component.scss'],\r\n})\r\nexport default class ButtonPageComponent {\r\n  @Input() buttonsPage: IButtonsPage;\r\n\r\n  originalOrder = (a: KeyValue<number, string>, b: KeyValue<number, string>): number => {\r\n    return 0;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../assets/styles/custom\";\r\n\r\n.buttons {\r\n  .list-header,\r\n  .list-item {\r\n    align-items: flex-start;\r\n    &:nth-child(even) {\r\n      height: 100px;\r\n    }\r\n    &:not(:first-child):nth-child(odd) {\r\n      height: 170px;\r\n    }\r\n    &:not(:first-child) {\r\n      padding-top: 20px;\r\n    }\r\n  }\r\n  .list-header {\r\n    font-size: $weeny-font-size;\r\n    line-height: 12px;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .header-list .list-header {\r\n    justify-content: flex-start;\r\n    align-items: flex-end;\r\n  }\r\n\r\n  .content-list .list-header {\r\n    align-items: flex-start;\r\n  }\r\n\r\n  &-list-header {\r\n    font-size: $base-font-size;\r\n    font-weight: 700;\r\n    text-transform: capitalize;\r\n    line-height: normal;\r\n    margin-bottom: 5px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./button-page.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"page buttons\">\r\n  <ng-container *ngFor=\"let type of buttonsPage | keyvalue: originalOrder\">\r\n    <header class=\"page-header\">\r\n      <h1 class=\"page-title\">Buttons / <span class=\"page-header-highlighted\">{{type.key}}</span></h1>\r\n      <p class=\"page-header-line\">\r\n        Height:\r\n        <span class=\"page-header-highlighted\">{{type.value.height}}</span>, min. width:\r\n        <span class=\"page-header-highlighted\">80px</span>\r\n      </p>\r\n      <p class=\"page-header-line\">\r\n        Typography style:\r\n        <span class=\"page-header-highlighted\">Paragraph 2 - medium</span>\r\n      </p>\r\n    </header>\r\n\r\n    <main class=\"page-main\">\r\n      <ul class=\"page-list header-list\">\r\n        <li class=\"list-header\"></li>\r\n        <li class=\"list-header\">\r\n          <span class=\"buttons-list-header\">Default</span>\r\n          .p-btn.p-btn-{{type.key}}\r\n        </li>\r\n        <li class=\"list-header\">\r\n          <span class=\"buttons-list-header\">Disabled</span>\r\n          [disabled]=true\r\n          <br/>\r\n          .p-btn:disabled\r\n        </li>\r\n        <li class=\"list-header\">\r\n          <span class=\"buttons-list-header\">Default + icon left</span>\r\n          [iconBefore]=\"eye\"\r\n          <br/>\r\n          .p-btn-icon-before\r\n        </li>\r\n        <li class=\"list-header\">\r\n          <span class=\"buttons-list-header\">Disabled + icon left</span>\r\n          [iconBefore]=\"eye\"\r\n          <br/>\r\n          [disabled]=true\r\n          <br/>\r\n          .p-btn-icon-before\r\n          <br/>\r\n          .p-btn:disabled\r\n        </li>\r\n        <li class=\"list-header\">\r\n          <span class=\"buttons-list-header\">Default + icon right</span>\r\n          [iconAfter]=\"chevron-down\"\r\n          <br/>\r\n          .p-btn-icon-after\r\n        </li>\r\n        <li class=\"list-header\">\r\n          <span class=\"buttons-list-header\">Disabled + icon right</span>\r\n          [iconAfter]=\"chevron-down\"\r\n          <br/>\r\n          [disabled]=true\r\n          <br/>\r\n          .p-btn-icon-after\r\n          <br/>\r\n          .p-btn:disabled\r\n        </li>\r\n        <li class=\"list-header\">\r\n          <span class=\"buttons-list-header\">Default + icon right&left</span>\r\n          [iconBefore]=\"eye\"\r\n          <br/>\r\n          [iconAfter]=\"chevron-down\"\r\n          <br/>\r\n          .p-btn-icon-before\r\n          <br/>\r\n          .p-btn-icon-after\r\n        </li>\r\n        <li class=\"list-header\">\r\n          <span class=\"buttons-list-header\">Disabled + icon right&left</span>\r\n          [iconBefore]=\"eye\"\r\n          <br/>\r\n          [iconAfter]=\"chevron-down\"\r\n          <br/>\r\n          [disabled]=true\r\n        </li>\r\n      </ul>\r\n      <ul *ngFor=\"let buttonType of type.value.buttons | keyvalue: originalOrder\"\r\n          class=\"page-list content-list {{buttonType.key}}\">\r\n        <li class=\"list-header\">\r\n          <span class=\"buttons-list-header\">{{buttonType.key}}</span>\r\n          [buttonType]=\r\n          <br/>\r\n          \"ButtonTypeEnum.{{buttonType.key.charAt(0).toUpperCase() + buttonType.key.slice(1)}}\"\r\n          <br/>\r\n          .p-btn-{{buttonType.key}}\r\n        </li>\r\n        <li *ngFor=\"let button of buttonType.value\" class=\"list-item\">\r\n          <p-button [label]=\"button.label\"\r\n                    [large]=\"button.large\"\r\n                    [disabled]=\"button.disabled\"\r\n                    [iconBefore]=\"button.iconBefore\"\r\n                    [iconBeforeWidth]=\"button.iconBeforeWidth\"\r\n                    [iconBeforeHeight]=\"button.iconBeforeHeight\"\r\n                    [iconAfter]=\"button.iconAfter\"\r\n                    [buttonType]=\"button.buttonType\"\r\n                    [iconAfterWidth]=\"button.iconAfterWidth\"\r\n                    [iconAfterHeight]=\"button.iconAfterHeight\"\r\n                    class=\"buttons-element\">\r\n          </p-button>\r\n        </li>\r\n      </ul>\r\n    </main>\r\n  </ng-container>\r\n</div>\r\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-b11d5996e721b4eeadb661a9f3532264",
            "file": "src/stories/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-checkbox",
            "styleUrls": [
                "./checkbox.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "selectAll",
                    "defaultValue": "false",
                    "line": 13,
                    "type": "boolean"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'p-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss'],\r\n})\r\nexport default class CheckboxComponent {\r\n  @Input() label: string;\r\n  @Input() ariaLabel: string;\r\n  @Input() checked: boolean = false;\r\n  @Input() disabled: boolean = false;\r\n  @Input() selectAll: boolean = false;\r\n  @Input() indeterminate: boolean = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../assets/styles/custom\";\r\n\r\n::ng-deep.p-checkbox {\r\n  // material styles override\r\n  .mat-checkbox-label {\r\n    font-family: $font-family-basic;\r\n    font-size: $small-font-size;\r\n    font-weight: 500;\r\n  }\r\n  .mat-checkbox-frame {\r\n    background-color: $gray-scale-1;\r\n    border-width: 1px;\r\n    border-color: $gray-scale-400;\r\n  }\r\n  .mat-ripple-element {\r\n    display: none;\r\n  }\r\n\r\n  // hover\r\n  // focus\r\n  &:not(.mat-checkbox-disabled):hover,\r\n  &.cdk-focused {\r\n    .mat-checkbox-frame {\r\n      border-color: $secondary-a-700;\r\n    }\r\n    .mat-checkbox-mixedmark {\r\n      background-color: $secondary-a-700;\r\n    }\r\n  }\r\n\r\n  // disabled\r\n  &.mat-checkbox-disabled {\r\n    &:not(.mat-checkbox-checked) .mat-checkbox-frame {\r\n      background-color: $primary-c-50;\r\n      border-color: $gray-scale-400;\r\n    }\r\n    .mat-checkbox-label {\r\n      color: $gray-scale-600;\r\n    }\r\n  }\r\n\r\n  // checked\r\n  &.mat-checkbox-checked {\r\n    .mat-checkbox-background {\r\n      background-color: $secondary-a-700;\r\n    }\r\n    // checked + hover\r\n    &:not(.mat-checkbox-disabled):hover {\r\n      .mat-checkbox-background {\r\n        background-color: $secondary-a-800;\r\n      }\r\n    }\r\n\r\n    // checked + disabled\r\n    &.mat-checkbox-disabled {\r\n      .mat-checkbox-background {\r\n        background-color: $secondary-a-100;\r\n      }\r\n    }\r\n  }\r\n  .mat-checkbox-checkmark-path {\r\n    stroke: $gray-scale-1 !important;\r\n    stroke-width: 3px;\r\n  }\r\n  .mat-checkbox-checkmark {\r\n    width: 88%;\r\n    left: 1px;\r\n  }\r\n  .mat-checkbox-checkmark {\r\n    fill: $gray-scale-1;\r\n  }\r\n\r\n  // select all\r\n  &.select-all {\r\n    .mat-checkbox-frame {\r\n      border-color: $primary-a-900;\r\n    }\r\n  }\r\n\r\n  // indeterminate\r\n  &.mat-checkbox-indeterminate {\r\n    .mat-checkbox-background {\r\n      background-color: transparent;\r\n    }\r\n    .mat-checkbox-frame {\r\n      border-width: 1px;\r\n      border-color: $primary-a-900;\r\n    }\r\n    .mat-checkbox-checkmark {\r\n      transform: rotate(0);\r\n    }\r\n  }\r\n  .mat-checkbox-mixedmark {\r\n    width: calc(100% - 8px);\r\n    height: 2px;\r\n    background-color: $primary-a-900;\r\n  }\r\n}\r\n",
                    "styleUrl": "./checkbox.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-checkbox\r\n  class=\"p-checkbox\"\r\n  [ngClass]=\"{'select-all': selectAll}\"\r\n  [aria-label]=\"ariaLabel\"\r\n  [checked]=\"checked\"\r\n  [disabled]=\"disabled\"\r\n  [indeterminate]=\"indeterminate\">\r\n  <ng-container *ngIf=\"label\">\r\n    {{label}}\r\n  </ng-container>\r\n</mat-checkbox>\r\n"
        },
        {
            "name": "CheckboxGroupComponent",
            "id": "component-CheckboxGroupComponent-cd1ad49753e88a23b525fc88b2b311d5",
            "file": "src/stories/checkbox/checkbox-group/checkbox-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-checkbox-group",
            "styleUrls": [
                "./checkbox-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checkboxGroup",
                    "line": 11,
                    "type": "ICheckbox[]"
                },
                {
                    "name": "error",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "groupTitle",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\nimport ICheckbox from '../checkbox.interface';\r\n\r\n@Component({\r\n  selector: 'p-checkbox-group',\r\n  templateUrl: './checkbox-group.component.html',\r\n  styleUrls: ['./checkbox-group.component.scss'],\r\n})\r\nexport default class CheckboxGroupComponent {\r\n  @Input() groupTitle: string;\r\n  @Input() checkboxGroup: ICheckbox[];\r\n  @Input() error: string;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../assets/styles/custom\";\r\n\r\n.checkbox-group {\r\n  &-title {\r\n    font-family: $font-family-basic;\r\n    font-size: $tiny-font-size;\r\n    font-weight: 700;\r\n    line-height: 18px;\r\n  }\r\n  &-list {\r\n    @include resetUl;\r\n  }\r\n  &-item {\r\n    margin-top: 10px;\r\n  }\r\n  &-error {\r\n    font-family: $font-family-basic;\r\n    font-size: $tiny-font-size;\r\n    line-height: 18px;\r\n    color: $supportive-alert-500;\r\n    margin-top: 10px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./checkbox-group.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"checkbox-group\">\r\n  <h3 class=\"checkbox-group-title\">{{groupTitle}}</h3>\r\n    <ul class=\"checkbox-group-list\">\r\n      <li *ngFor=\"let checkbox of checkboxGroup\" class=\"checkbox-group-item\">\r\n        <p-checkbox [label]=\"checkbox.label\"\r\n                    [ariaLabel]=\"checkbox.ariaLabel\"\r\n                    [checked]=\"checkbox.checked\"\r\n                    [disabled]=\"checkbox.disabled\">\r\n        </p-checkbox>\r\n      </li>\r\n    </ul>\r\n  <p *ngIf=\"error\" class=\"checkbox-group-error\">{{error}}</p>\r\n</div>\r\n"
        },
        {
            "name": "CheckboxGroupPageComponent",
            "id": "component-CheckboxGroupPageComponent-acfc98b95e9e264deed6de805334a97d",
            "file": "src/stories/checkbox/checkbox-group-page/checkbox-group-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-checkbox-group-page",
            "styleUrls": [
                "./checkbox-group-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-group-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checkboxGroupPage",
                    "line": 10,
                    "type": "ICheckboxGroup[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\nimport ICheckboxGroup from '../checkbox-group/checkbox-group.interface';\r\n\r\n@Component({\r\n  selector: 'p-checkbox-group-page',\r\n  templateUrl: './checkbox-group-page.component.html',\r\n  styleUrls: ['./checkbox-group-page.component.scss'],\r\n})\r\nexport default class CheckboxGroupPageComponent {\r\n  @Input() checkboxGroupPage: ICheckboxGroup[];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../assets/styles/custom\";\r\n\r\n.checkbox-group-page {\r\n  .page-main {\r\n    margin-top: 110px;\r\n  }\r\n  &-list {\r\n    display: flex;\r\n    @include resetUl;\r\n  }\r\n  &-item:not(:first-child) {\r\n    margin-left: 140px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./checkbox-group-page.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"page checkbox-group-page\">\r\n    <header class=\"page-header\">\r\n      <h1 class=\"page-title\">Checkbox / <span class=\"page-header-highlighted\">Examples</span></h1>\r\n    </header>\r\n\r\n    <main class=\"page-main\">\r\n      <ul class=\"checkbox-group-page-list\">\r\n        <li *ngFor=\"let group of checkboxGroupPage\" class=\"checkbox-group-page-item\">\r\n          <p-checkbox-group [groupTitle]=\"group.groupTitle\"\r\n                          [checkboxGroup]=\"group.checkboxGroup\"\r\n                          [error]=\"group.error\">\r\n          </p-checkbox-group>\r\n        </li>\r\n      </ul>\r\n\r\n    </main>\r\n</div>\r\n"
        },
        {
            "name": "CheckboxPageComponent",
            "id": "component-CheckboxPageComponent-e1c761147f5ebe593344e9c2c0672193",
            "file": "src/stories/checkbox/checkbox-page/checkbox-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-checkbox-page",
            "styleUrls": [
                "./checkbox-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checkboxesPage",
                    "line": 10,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "originalOrder",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\nimport {KeyValue} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'p-checkbox-page',\r\n  templateUrl: './checkbox-page.component.html',\r\n  styleUrls: ['./checkbox-page.component.scss'],\r\n})\r\nexport default class CheckboxPageComponent {\r\n  @Input() checkboxesPage: any;\r\n\r\n  originalOrder = (a: KeyValue<number, string>, b: KeyValue<number, string>): number => {\r\n    return 0;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./checkbox-page.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"page checkboxes\">\r\n    <header class=\"page-header\">\r\n      <h1 class=\"page-title\">Checkbox / <span class=\"page-header-highlighted\">Base</span></h1>\r\n    </header>\r\n\r\n    <main class=\"page-main\">\r\n      <ul class=\"page-list header-list\">\r\n        <li class=\"list-header\"></li>\r\n        <li class=\"list-header\">[checked]=false</li>\r\n        <li class=\"list-header\">\r\n          [checked]=false\r\n          <br/>\r\n          [disabled]=true\r\n        </li>\r\n        <li class=\"list-header\">\r\n          [checked]=true\r\n        </li>\r\n        <li class=\"list-header\">\r\n          [checked]=true\r\n          <br/>\r\n          [disabled]=true\r\n        </li>\r\n        <li class=\"list-header\">\r\n          [selectAll]=true\r\n        </li>\r\n        <li class=\"list-header\">\r\n          [indeterminate]=true\r\n        </li>\r\n      </ul>\r\n\r\n      <ul *ngFor=\"let checkboxType of checkboxesPage | keyvalue: originalOrder\"\r\n          class=\"page-list content-list {{checkboxType.key}}\">\r\n        <li class=\"list-header\">\r\n          [{{checkboxType.key}}]=\"Label\"\r\n        </li>\r\n        <li *ngFor=\"let checkbox of checkboxType.value\" class=\"list-item\">\r\n          <p-checkbox [label]=\"checkbox.label\"\r\n                          [ariaLabel]=\"checkbox.ariaLabel\"\r\n                          [checked]=\"checkbox.checked\"\r\n                          [disabled]=\"checkbox.disabled\"\r\n                          [selectAll]=\"checkbox.selectAll\"\r\n                          [indeterminate]=\"checkbox.indeterminate\">\r\n          </p-checkbox>\r\n        </li>\r\n      </ul>\r\n\r\n    </main>\r\n</div>\r\n"
        },
        {
            "name": "ColorPaletteComponent",
            "id": "component-ColorPaletteComponent-d6d911981e6544125aa9496ef71f059a",
            "file": "src/stories/colors/color-palette.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-colors",
            "styleUrls": [
                "./color-palette.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./color-palette.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "originalOrder",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "palette",
                    "defaultValue": "palette",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "reverseKeyOrder",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 80
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\r\nimport {KeyValue} from '@angular/common';\r\n\r\nconst palette = {\r\n  primary: {\r\n    a: {\r\n      900: {name: 'P-A 900', labelColor: 'white'}\r\n    },\r\n    b: {\r\n      300: { name: 'P-B 300', labelColor: 'white' }\r\n    },\r\n    c: {\r\n      50: {name: 'P-C 50', labelColor: 'black'}\r\n    }\r\n  },\r\n  secondary: {\r\n    a: { 800: { name: 'S-A 800', labelColor: 'white' },\r\n      700: { name: 'S-A 700', labelColor: 'white' },\r\n      600: { name: 'S-A 600', labelColor: 'white' },\r\n      500: { name: 'S-A 500', labelColor: 'black' },\r\n      200: { name: 'S-A 200', labelColor: 'black' },\r\n      100: { name: 'S-A 100', labelColor: 'black' },\r\n      50: { name: 'S-A 50', labelColor: 'black' } },\r\n    b: { 700: { name: 'S-B 700', labelColor: 'white' },\r\n      500: { name: 'S-B 500', labelColor: 'white' },\r\n      400: { name: 'S-B 400', labelColor: 'white' },\r\n      300: { name: 'S-B 300', labelColor: 'white' },\r\n      200: { name: 'S-B 200', labelColor: 'black' },\r\n      100: { name: 'S-B 100', labelColor: 'black' },\r\n      50: { name: 'S-B 500', labelColor: 'black' }\r\n    }\r\n  },\r\n  gray: {\r\n    scale: { 800: { name: 'grayscale 800', labelColor: 'white' },\r\n        700: { name: 'grayscale 700', labelColor: 'white' },\r\n        600: { name: 'grayscale 600', labelColor: 'white' },\r\n        500: { name: 'grayscale 500', labelColor: 'white' },\r\n        400: { name: 'grayscale 400', labelColor: 'black' },\r\n        100: { name: 'grayscale 100', labelColor: 'black' },\r\n        50: { name: 'grayscale 50', labelColor: 'black' },\r\n        5: { name: 'grayscale 5', labelColor: 'black' },\r\n        1: { name: 'grayscale 1', labelColor: 'black' }\r\n    }\r\n  },\r\n  supportive: {\r\n    alert: {\r\n      700: { name: 'Alert 700', labelColor: 'white' },\r\n      500: { name: 'Alert 500', labelColor: 'black' },\r\n      50: { name: 'Alert 50', labelColor: 'black' }\r\n    },\r\n    yellow: { 300: { name: 'Yellow 300', labelColor: 'black' } },\r\n    orange: {\r\n      300: { name: 'Orange 300', labelColor: 'black' },\r\n      50: { name: 'Orange 50', labelColor: 'black' }\r\n    },\r\n    success: {\r\n      400: { name: 'Success 400', labelColor: 'black' },\r\n      50: { name: 'Success 50', labelColor: 'black' }\r\n    },\r\n    dev: {\r\n      a: { name: 'Dev A', labelColor: 'white' },\r\n      b: { name: 'Dev B', labelColor: 'white' },\r\n      c: { name: 'Dev C', labelColor: 'white' }\r\n    }\r\n  }\r\n};\r\n\r\n@Component({\r\n  selector: 'p-colors',\r\n  templateUrl: './color-palette.component.html',\r\n  styleUrls: ['./color-palette.component.scss'],\r\n})\r\nexport default class ColorPaletteComponent {\r\n  public palette = palette;\r\n\r\n  originalOrder = (a: KeyValue<number, string>, b: KeyValue<number, string>): number => {\r\n    return 0;\r\n  }\r\n\r\n  reverseKeyOrder = (a: KeyValue<number, string>, b: KeyValue<number, string>): number => {\r\n    return -1;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../assets/styles/custom\";\r\n\r\n$colorScheme: (\r\n  primary-a-900: $primary-a-900,\r\n  primary-b-300: $primary-b-300,\r\n  primary-c-50: $primary-c-50,\r\n  secondary-a-800: $secondary-a-800,\r\n  secondary-a-700: $secondary-a-700,\r\n  secondary-a-600: $secondary-a-600,\r\n  secondary-a-500: $secondary-a-500,\r\n  secondary-a-200: $secondary-a-200,\r\n  secondary-a-100: $secondary-a-100,\r\n  secondary-a-50: $secondary-a-50,\r\n  secondary-b-700: $secondary-b-700,\r\n  secondary-b-500: $secondary-b-500,\r\n  secondary-b-400: $secondary-b-400,\r\n  secondary-b-300: $secondary-b-300,\r\n  secondary-b-200: $secondary-b-200,\r\n  secondary-b-100: $secondary-b-100,\r\n  secondary-b-50: $secondary-b-50,\r\n  gray-scale-800: $gray-scale-800,\r\n  gray-scale-700: $gray-scale-700,\r\n  gray-scale-600: $gray-scale-600,\r\n  gray-scale-500: $gray-scale-500,\r\n  gray-scale-400: $gray-scale-400,\r\n  gray-scale-100: $gray-scale-100,\r\n  gray-scale-50: $gray-scale-50,\r\n  gray-scale-5: $gray-scale-5,\r\n  gray-scale-1: $gray-scale-1,\r\n  supportive-alert-700: $supportive-alert-700,\r\n  supportive-alert-500: $supportive-alert-500,\r\n  supportive-alert-50: $supportive-alert-50,\r\n  supportive-yellow-300: $supportive-yellow-300,\r\n  supportive-orange-300 :$supportive-orange-300,\r\n  supportive-orange-50: $supportive-orange-50,\r\n  supportive-success-400: $supportive-success-400,\r\n  supportive-success-50: $supportive-success-50,\r\n  supportive-dev-a: $supportive-dev-a,\r\n  supportive-dev-b: $supportive-dev-b,\r\n  supportive-dev-c: $supportive-dev-c,\r\n);\r\n\r\n$box-width: 209px;\r\n$box-height: 87px;\r\n$box-gap: 23px;\r\n\r\n@each $name, $value in $colorScheme {\r\n  .#{$name} {\r\n    background-color: $value;\r\n  }\r\n}\r\n\r\n.page {\r\n  width: fit-content;\r\n}\r\n\r\n.color {\r\n  &-scheme {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 1900px;\r\n    &-group {\r\n      margin-bottom: 193px;\r\n      &:nth-child(odd) {\r\n        width: $box-width * 3 + $box-gap * 2;\r\n        margin-right: 259px;\r\n      }\r\n      &:nth-child(even) {\r\n        flex-basis: $box-width * 4 + $box-gap * 3;\r\n      }\r\n    }\r\n    &-title {\r\n      font-size: 17px;\r\n      color: $gray-scale-700;\r\n      line-height: 21.37px;\r\n      text-transform: capitalize;\r\n      flex-basis: 100%;\r\n      padding-bottom: 14px;\r\n    }\r\n    &-container {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      width: fit-content;\r\n      padding-top: 50px;\r\n      border-top: 1px solid $black;\r\n    }\r\n  }\r\n\r\n  &-column {\r\n    & ~ &:not(.color-supportive-dev) {\r\n      margin-left: $box-gap;\r\n    }\r\n  }\r\n\r\n  &-box {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    font-size: 17px;\r\n    line-height: 21px;\r\n    width: $box-width;\r\n    height: $box-height;\r\n    padding-left: 25px;\r\n    padding-right: 25px;\r\n    &.white {\r\n      color: $gray-scale-1;\r\n      font-weight: 500;\r\n    }\r\n    &.black {\r\n      color: $primary-a-900;\r\n      font-weight: 700;\r\n    }\r\n  }\r\n\r\n  &-box-name,\r\n  &-box-class {\r\n    line-height: 21.37px;\r\n  }\r\n\r\n  &-supportive-dev {\r\n    display: flex;\r\n    flex-direction: row-reverse;\r\n    justify-content: flex-start;\r\n    flex-basis: 100%;\r\n    margin-top: $box-height;\r\n    .color-box {\r\n      display: inline-flex;\r\n      & ~ .color-box {\r\n        margin-right: $box-gap;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./color-palette.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"page\">\r\n  <header class=\"page-header\">\r\n    <h1 class=\"page-title\">Colors / <span class=\"page-title-highlighted\">Scheme</span></h1>\r\n  </header>\r\n\r\n  <main class=\"page-main\">\r\n    <div *ngIf=\"palette\" class=\"color-scheme\">\r\n      <div *ngFor=\"let group of palette | keyvalue: originalOrder\"\r\n           class=\"color-scheme-group {{group.key}}\">\r\n        <ng-template [ngIf]=\"group.key === 'gray'\" [ngIfElse]=\"regularTitle\">\r\n          <h2 class=\"color-scheme-title\">Grayscale</h2>\r\n        </ng-template>\r\n\r\n        <ng-template #regularTitle>\r\n          <h2 class=\"color-scheme-title\">{{group.key}}</h2>\r\n        </ng-template>\r\n\r\n        <div class=\"color-scheme-container\">\r\n          <div *ngFor=\"let column of group.value | keyvalue: originalOrder\"\r\n               class=\"color-column color-{{group.key}}-{{column.key}}\">\r\n            <div *ngFor=\"let box of column.value | keyvalue: reverseKeyOrder\"\r\n                 class=\"color-box {{group.key}}-{{column.key}}-{{box.key}} {{box.value.labelColor}}\">\r\n              <p class=\"color-box-class\">${{group.key}}-{{column.key}}-{{box.key}}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </main>\r\n</div>\r\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-b86f06768ce530c7c9585c2853add009",
            "file": "src/stories/icons/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-icon",
            "styleUrls": [
                "./icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "fill",
                    "defaultValue": "'none'",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "height",
                    "defaultValue": "'auto'",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "name",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "stroke",
                    "defaultValue": "'currentColor'",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "strokeLinecap",
                    "defaultValue": "'round'",
                    "line": 15,
                    "type": "string"
                },
                {
                    "name": "strokeLinejoin",
                    "defaultValue": "'round'",
                    "line": 16,
                    "type": "string"
                },
                {
                    "name": "strokeWidth",
                    "defaultValue": "1",
                    "line": 14,
                    "type": "number"
                },
                {
                    "name": "width",
                    "defaultValue": "'16'",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'p-icon',\r\n  templateUrl: './icon.component.html',\r\n  styleUrls: ['./icon.component.scss'],\r\n})\r\nexport default class IconComponent {\r\n  @Input() name: string;\r\n  @Input() width: string  = '16'; // pixels or auto\r\n  @Input() height: string  = 'auto'; // pixels or auto\r\n  @Input() fill: string = 'none'; // icon background\r\n  @Input() stroke: string = 'currentColor'; // line color\r\n  @Input() strokeWidth: number = 1; // line width in pixels\r\n  @Input() strokeLinecap: string = 'round'; // line end\r\n  @Input() strokeLinejoin: string = 'round'; // two lines join\r\n\r\n  public get iconStyles(): any {\r\n    return {\r\n      width: this.width === 'auto' ? this.width : `${this.width}px`,\r\n      height: this.height === 'auto' ? this.height : `${this.height}px`,\r\n      fill: this.fill,\r\n      stroke: this.stroke,\r\n      strokeWidth: `${this.strokeWidth}px`,\r\n      strokeLinecap: this.strokeLinecap,\r\n      strokeLinejoin: this.strokeLinejoin\r\n    };\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../assets/styles/custom\";\r\n\r\n.p-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n",
                    "styleUrl": "./icon.component.scss"
                }
            ],
            "stylesData": "",
            "accessors": {
                "iconStyles": {
                    "name": "iconStyles",
                    "getSignature": {
                        "name": "iconStyles",
                        "type": "any",
                        "returnType": "any",
                        "line": 18
                    }
                }
            },
            "templateData": "<i-feather name=\"{{name}}\"\r\n           [ngStyle]=\"iconStyles\"\r\n           class=\"p-icon\">\r\n</i-feather>\r\n\r\n\r\n"
        },
        {
            "name": "InputNumericComponent",
            "id": "component-InputNumericComponent-7f95fe3d6a190ef86b407735e7ee3c7e",
            "file": "src/stories/input-numeric/input-numeric.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-input-numeric",
            "styleUrls": [
                "./input-numeric.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-numeric.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "errorMessage",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "label",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "labelLast",
                    "defaultValue": "false",
                    "line": 19,
                    "type": "boolean"
                },
                {
                    "name": "placeholder",
                    "line": 13,
                    "type": "number"
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "type",
                    "defaultValue": "'number'",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "validators",
                    "line": 18,
                    "type": "ValidatorFn[]"
                },
                {
                    "name": "value",
                    "line": 17,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customControl",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormControl, ValidatorFn} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'p-input-numeric',\r\n  templateUrl: './input-numeric.component.html',\r\n  styleUrls: ['./input-numeric.component.scss'],\r\n})\r\nexport default class InputNumericComponent implements OnInit {\r\n  @Input() type: string = 'number';\r\n  @Input() label: string;\r\n  @Input() ariaLabel: string; // required\r\n  @Input() placeholder: number;\r\n  @Input() errorMessage: string;\r\n  @Input() disabled: boolean = false;\r\n  @Input() readonly: boolean = false;\r\n  @Input() value: number;\r\n  @Input() validators: ValidatorFn[];\r\n  @Input() labelLast: boolean = false;\r\n  public customControl: FormControl;\r\n\r\n  ngOnInit(): void {\r\n    this.customControl = new FormControl(\r\n      {value: this.value, disabled: this.disabled},\r\n      this.validators);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../assets/styles/custom\";\r\n\r\n$input-numeric-width: 55px;\r\n$input-numeric-padding: 8px;\r\n\r\n.p-input-numeric {\r\n  &-container {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  &-label {\r\n    font-family: $font-family-basic;\r\n    font-weight: 400;\r\n    font-size: $small-font-size;\r\n    text-transform: capitalize;\r\n    line-height: 19px;\r\n    color: $primary-a-900;\r\n    padding-bottom: 15px;\r\n    &.disabled {\r\n      color: $gray-scale-600;\r\n    }\r\n    &.first {\r\n      margin-right: 8px;\r\n    }\r\n    &.last {\r\n      margin-left: 8px;\r\n    }\r\n  }\r\n\r\n  ::ng-deep & {\r\n    // material styles override\r\n    .mat-input-element {\r\n      font-family: $font-family-basic;\r\n      font-size: $base-font-size;\r\n      max-width: $input-numeric-width - $input-numeric-padding;\r\n      line-height: 20px;\r\n      color: $primary-a-900;\r\n      padding-left: $input-numeric-padding;\r\n      caret-color: $primary-a-900;\r\n    }\r\n    .mat-form-field-infix {\r\n      width: $input-numeric-width;\r\n      padding-top: 0;\r\n      padding-bottom: 6px;\r\n    }\r\n    .mat-form-field-label-wrapper {\r\n      padding-top: 0;\r\n    }\r\n    &.mat-form-field-appearance-standard .mat-form-field-flex {\r\n      padding-top: 0;\r\n    }\r\n    &.mat-form-field-appearance-standard .mat-form-field-underline {\r\n      background-color: transparent;\r\n      box-shadow: inset 0px -1px 0px $gray-scale-600;\r\n    }\r\n    &.mat-form-field.mat-focused .mat-form-field-underline,\r\n    &:not(.mat-form-field-disabled):not(.mat-form-field-invalid)\r\n            .mat-form-field-flex:hover~.mat-form-field-underline {\r\n      background-color: transparent;\r\n      box-shadow: inset 0px -1px 0px $primary-a-900;\r\n    }\r\n    .mat-form-field-ripple {\r\n      display: none;\r\n    }\r\n    .mat-form-field-subscript-wrapper {\r\n      margin-top: 5px;\r\n    }\r\n    .mat-error {\r\n      font-family: $font-family-basic;\r\n      font-size: $tiny-font-size;\r\n      color: $supportive-alert-500;\r\n      line-height: 12px;\r\n    }\r\n\r\n    // disabled\r\n    &.mat-form-field-disabled {\r\n      .mat-input-element {\r\n        color: $gray-scale-600;\r\n      }\r\n      .mat-form-field-underline {\r\n        box-shadow: inset 0px -1px 0px $gray-scale-400;\r\n      }\r\n    }\r\n\r\n    // error state\r\n    &.ng-invalid {\r\n      .mat-form-field-underline {\r\n        box-shadow: inset 0px -1px 0px $supportive-alert-500;\r\n      }\r\n      &.mat-form-field.mat-focused .mat-form-field-underline {\r\n        box-shadow: inset 0px -1px 0px $supportive-alert-700;\r\n      }\r\n    }\r\n\r\n    // readonly\r\n    &.p-input-numeric-readonly {\r\n      .mat-form-field-underline {\r\n        box-shadow: none;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./input-numeric.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-template [ngIf]=\"label\" [ngIfElse]=\"noLabel\">\r\n  <div class=\"p-input-numeric-container\">\r\n    <label *ngIf=\"!labelLast\" class=\"p-input-numeric-label first\" [ngClass]=\"{'disabled' : disabled}\">\r\n      {{label}}\r\n    </label>\r\n    <ng-container *ngTemplateOutlet=\"noLabel\"></ng-container>\r\n    <label *ngIf=\"labelLast\" class=\"p-input-numeric-label last\" [ngClass]=\"{'disabled' : disabled}\">\r\n      {{label}}\r\n    </label>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #noLabel>\r\n  <mat-form-field class=\"p-input-numeric\"\r\n                  appearance=\"standard\"\r\n                  [ngClass]=\"{'p-input-numeric-readonly' : readonly}\"\r\n                  floatLabel=\"always\">\r\n    <input matInput\r\n           [type]=\"type\"\r\n           [placeholder]=\"placeholder\"\r\n           [readonly]=\"readonly\"\r\n           attr.aria-label=\"{{ariaLabel}}\"\r\n           [formControl]=\"customControl\"\r\n           class=\"p-input-numeric-input\">\r\n    <mat-error *ngIf=\"customControl.invalid\"\r\n               class=\"p-input-numeric-error\">\r\n      {{errorMessage}}\r\n    </mat-error>\r\n  </mat-form-field>\r\n</ng-template>\r\n"
        },
        {
            "name": "InputTextComponent",
            "id": "component-InputTextComponent-ddc8847bfef451062522877da9fd7a33",
            "file": "src/stories/input-text/input-text.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-input-text",
            "styleUrls": [
                "./input-text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "errorMessage",
                    "line": 14,
                    "type": "string"
                },
                {
                    "name": "label",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "placeholder",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "validators",
                    "line": 18,
                    "type": "ValidatorFn[]"
                },
                {
                    "name": "value",
                    "line": 17,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customControl",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\r\nimport {FormControl, ValidatorFn} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'p-input-text',\r\n  templateUrl: './input-text.component.html',\r\n  styleUrls: ['./input-text.component.scss'],\r\n})\r\nexport default class InputTextComponent implements OnInit {\r\n  @Input() type: string = 'text';\r\n  @Input() label: string;\r\n  @Input() ariaLabel: string;\r\n  @Input() placeholder: string;\r\n  @Input() errorMessage: string;\r\n  @Input() disabled: boolean = false;\r\n  @Input() readonly: boolean = false;\r\n  @Input() value: string;\r\n  @Input() validators: ValidatorFn[];\r\n  public customControl: FormControl;\r\n\r\n  ngOnInit(): void {\r\n    this.customControl = new FormControl(\r\n      {value: this.value, disabled: this.disabled},\r\n      this.validators);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../assets/styles/custom\";\r\n\r\n$input-text-width: 220px;\r\n$input-text-padding: 8px;\r\n\r\n.p-input-text {\r\n  &-label {\r\n    font-family: $font-family-basic;\r\n    font-weight: 500;\r\n    font-size: $tiny-font-size;\r\n    text-transform: capitalize;\r\n    line-height: 19px;\r\n    color: $gray-scale-700;\r\n  }\r\n\r\n  ::ng-deep & {\r\n    // material styles override\r\n    .mat-input-element {\r\n      font-family: $font-family-basic;\r\n      font-size: $base-font-size;\r\n      max-width: $input-text-width - $input-text-padding;\r\n      line-height: 20px;\r\n      color: $primary-a-900;\r\n      padding-left: $input-text-padding;\r\n      caret-color: $primary-a-900;\r\n    }\r\n    .mat-form-field-infix {\r\n      width: $input-text-width;\r\n      padding-bottom: 6px;\r\n    }\r\n    &.mat-form-field-appearance-standard .mat-form-field-flex {\r\n      padding-top: 0;\r\n    }\r\n    &.mat-form-field-appearance-standard .mat-form-field-underline {\r\n      background-color: transparent;\r\n      box-shadow: inset 0px -1px 0px $gray-scale-600;\r\n    }\r\n    &.mat-form-field.mat-focused .mat-form-field-underline,\r\n    &:not(.mat-form-field-disabled):not(.mat-form-field-invalid)\r\n            .mat-form-field-flex:hover~.mat-form-field-underline {\r\n      background-color: transparent;\r\n      box-shadow: inset 0px -1px 0px $primary-a-900;\r\n    }\r\n    .mat-form-field-ripple {\r\n      display: none;\r\n    }\r\n    .mat-form-field-subscript-wrapper {\r\n      margin-top: 5px;\r\n    }\r\n    .mat-error {\r\n      font-family: $font-family-basic;\r\n      font-size: $tiny-font-size;\r\n      color: $supportive-alert-500;\r\n      line-height: 12px;\r\n    }\r\n\r\n    // disabled\r\n    &.mat-form-field-disabled {\r\n      .mat-input-element {\r\n        color: $gray-scale-600;\r\n      }\r\n      .mat-form-field-underline {\r\n        box-shadow: inset 0px -1px 0px $gray-scale-400;\r\n      }\r\n    }\r\n\r\n    // error state\r\n    &.ng-invalid {\r\n      .mat-form-field-underline {\r\n        box-shadow: inset 0px -1px 0px $supportive-alert-500;\r\n      }\r\n      &.mat-form-field.mat-focused .mat-form-field-underline {\r\n        box-shadow: inset 0px -1px 0px $supportive-alert-700;\r\n      }\r\n    }\r\n\r\n    // readonly\r\n    &.p-input-text-readonly {\r\n      &:not(.mat-form-field-disabled):not(.mat-form-field-invalid)\r\n      .mat-form-field-flex:hover~.mat-form-field-underline,\r\n\r\n      .mat-form-field-underline {\r\n        box-shadow: none;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./input-text.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-form-field class=\"p-input-text\"\r\n                appearance=\"standard\"\r\n                [ngClass]=\"{'p-input-text-readonly' : readonly}\"\r\n                floatLabel=\"always\">\r\n  <mat-label class=\"p-input-text-label\">{{label}}</mat-label>\r\n  <input matInput\r\n         [type]=\"type\"\r\n         [placeholder]=\"placeholder\"\r\n         [readonly]=\"readonly\"\r\n         attr.aria-label=\"{{ariaLabel}}\"\r\n         [formControl]=\"customControl\"\r\n         class=\"p-input-text-input\">\r\n  <mat-error *ngIf=\"customControl.invalid\"\r\n             class=\"p-input-text-error\">\r\n    {{errorMessage}}\r\n  </mat-error>\r\n</mat-form-field>\r\n"
        },
        {
            "name": "InputTextPageComponent",
            "id": "component-InputTextPageComponent-5ccd3658571e2b6881c3496584af3a38",
            "file": "src/stories/input-text/input-text-page/input-text-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-input-text-page",
            "styleUrls": [
                "./input-text-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-text-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "inputTextPage",
                    "line": 10,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "originalOrder",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\nimport {KeyValue} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'p-input-text-page',\r\n  templateUrl: './input-text-page.component.html',\r\n  styleUrls: ['./input-text-page.component.scss'],\r\n})\r\nexport default class InputTextPageComponent {\r\n  @Input() inputTextPage: any;\r\n\r\n  originalOrder = (a: KeyValue<number, string>, b: KeyValue<number, string>): number => {\r\n    return 0;\r\n  }\r\n}\r\n\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".page-input-text {\r\n  .header-list .list-header:not(:first-child),\r\n  .list-item {\r\n    height: 100px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./input-text-page.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"page page-input-text\">\r\n    <header class=\"page-header\">\r\n      <h1 class=\"page-title\">Text Input / <span class=\"page-header-highlighted\">Base</span></h1>\r\n    </header>\r\n\r\n    <main class=\"page-main\">\r\n      <ul class=\"page-list header-list\">\r\n        <li class=\"list-header\"></li>\r\n        <li class=\"list-header\">\r\n          Default\r\n        </li>\r\n        <li class=\"list-header\">\r\n          Disabled\r\n        </li>\r\n        <li class=\"list-header\">\r\n          View only\r\n        </li>\r\n      </ul>\r\n\r\n      <ul *ngFor=\"let inputType of inputTextPage | keyvalue: originalOrder\"\r\n          class=\"page-list content-list\">\r\n        <li class=\"list-header\">\r\n          {{inputType.value.title}}\r\n        </li>\r\n        <li *ngFor=\"let input of inputType.value.list\" class=\"list-item\">\r\n          <p-input-text [type]=\"input.type\"\r\n                        [label]=\"input.label\"\r\n                        [ariaLabel]=\"input.ariaLabel\"\r\n                        [placeholder]=\"input.placeholder\"\r\n                        [errorMessage]=\"input.errorMessage\"\r\n                        [disabled]=\"input.disabled\"\r\n                        [readonly]=\"input.readonly\"\r\n                        [value]=\"input.value\"\r\n                        [validators]=\"input.validators\">\r\n          </p-input-text>\r\n        </li>\r\n        <ng-container *ngIf=\"inputType.value.list.length === 1\">\r\n          <li class=\"list-item\"></li>\r\n          <li class=\"list-item\"></li>\r\n        </ng-container>\r\n      </ul>\r\n    </main>\r\n</div>\r\n"
        },
        {
            "name": "InputTextTableLayoutComponent",
            "id": "component-InputTextTableLayoutComponent-5ee3ecd8f2668d6ba85595bd81e319a5",
            "file": "src/stories/input-text/input-text-table-layout/input-text-table-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-input-text-table-layout",
            "styleUrls": [
                "./input-text-table-layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-text-table-layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "inputTablePage",
                    "line": 10,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isComplexTableVisible",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isSimpleTableVisible",
                    "defaultValue": "true",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "originalOrder",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\nimport {KeyValue} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'p-input-text-table-layout',\r\n  templateUrl: './input-text-table-layout.component.html',\r\n  styleUrls: ['./input-text-table-layout.component.scss'],\r\n})\r\nexport default class InputTextTableLayoutComponent {\r\n  @Input() inputTablePage: any;\r\n  public isSimpleTableVisible: boolean = true;\r\n  public isComplexTableVisible: boolean = true;\r\n\r\n  originalOrder = (a: KeyValue<number, string>, b: KeyValue<number, string>): number => {\r\n    return 0;\r\n  }\r\n}\r\n\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../assets/styles/custom\";\r\n\r\n$table-header-max-width: 240px;\r\n$table-header-padding-right: 40px;\r\n\r\n.page-input-text-table-layout {\r\n  .page-main {\r\n    display: block;\r\n  }\r\n}\r\n\r\n.input-table {\r\n  border-collapse: collapse;\r\n\r\n  &-header {\r\n    font-family: $font-family-basic;\r\n    font-size: $base-font-size;\r\n    font-weight: 400;\r\n    color: $gray-scale-700;\r\n    text-align: left;\r\n    text-transform: capitalize;\r\n    max-width: $table-header-max-width;\r\n    padding-right: $table-header-padding-right;\r\n    padding-bottom: 26px;\r\n    &-text {\r\n      @include clamp;\r\n    }\r\n  }\r\n\r\n  &-data {\r\n    ::ng-deep .mat-form-field-infix {\r\n      padding-top: 0;\r\n      border-top-width: 5px;\r\n    }\r\n  }\r\n}\r\n\r\n.input-table-wrapper {\r\n  height: 325px;\r\n  &~& {\r\n    margin-top: 220px;\r\n  }\r\n}\r\n\r\n.input-table-trigger {\r\n  @include resetButton;\r\n  font-family: $font-family-accent;\r\n  font-weight: 700;\r\n  font-size: $middle-font-size;\r\n  letter-spacing: 0.05em;\r\n  text-transform: uppercase;\r\n  color: $primary-a-900;\r\n  margin-bottom: 15px;\r\n  &-icon {\r\n    display: flex;\r\n    margin-right: 12.5px;\r\n  }\r\n}\r\n\r\n.input-table-container {\r\n  padding-left: 22px;\r\n}\r\n",
                    "styleUrl": "./input-text-table-layout.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"page page-input-text-table-layout\">\r\n    <header class=\"page-header\">\r\n      <h1 class=\"page-title\">Text Input /\r\n        <span class=\"page-header-highlighted\">Table layout definitions</span>\r\n      </h1>\r\n    </header>\r\n\r\n    <main class=\"page-main\">\r\n      <div class=\"input-table-wrapper\">\r\n        <button class=\"input-table-trigger\" (click)=\"isSimpleTableVisible = !isSimpleTableVisible\">\r\n          <p-icon class=\"input-table-trigger-icon\"\r\n                  name=\"chevron-down\"\r\n                  width=\"16\"\r\n                  height=\"auto\"\r\n                  strokeWidth=\"3\"></p-icon>\r\n          {{inputTablePage.simple.title}}\r\n        </button>\r\n        <div *ngIf=\"isSimpleTableVisible\"\r\n            tabindex=\"-1\"\r\n            attr.aria-label=\"{{inputTablePage.simple.title}}\"\r\n            class=\"input-table-container\">\r\n          <table class=\"input-table\">\r\n            <tbody class=\"input-table-body\">\r\n            <ng-container *ngFor=\"let input of inputTablePage.simple.table\">\r\n              <tr class=\"input-table-row\">\r\n                <th class=\"input-table-header\">\r\n                  <span class=\"input-table-header-text\">{{input.tableHeader}}</span>\r\n                </th>\r\n                <td class=\"input-table-data\">\r\n                  <p-input-text [type]=\"input.tableData.type\"\r\n                                [label]=\"input.tableData.label\"\r\n                                [ariaLabel]=\"input.tableData.ariaLabel\"\r\n                                [placeholder]=\"input.tableData.placeholder\"\r\n                                [errorMessage]=\"input.tableData.errorMessage\"\r\n                                [disabled]=\"input.tableData.disabled\"\r\n                                [readonly]=\"input.tableData.readonly\"\r\n                                [value]=\"input.tableData.value\"\r\n                                [validators]=\"input.tableData.validators\">\r\n                  </p-input-text>\r\n                </td>\r\n              </tr>\r\n            </ng-container>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <!--<p-input-text [type]=\"inputTablePage.simple.table[1].tableData.type\"-->\r\n                      <!--[label]=\"inputTablePage.simple.table[1].tableData.label\"-->\r\n                      <!--[ariaLabel]=\"inputTablePage.simple.table[1].tableData.ariaLabel\"-->\r\n                      <!--[placeholder]=\"inputTablePage.simple.table[1].tableData.placeholder\"-->\r\n                      <!--[errorMessage]=\"inputTablePage.simple.table[1].tableData.errorMessage\"-->\r\n                      <!--[disabled]=\"inputTablePage.simple.table[1].tableData.disabled\"-->\r\n                      <!--[readonly]=\"inputTablePage.simple.table[1].tableData.readonly\"-->\r\n                      <!--[value]=\"inputTablePage.simple.table[1].tableData.value\"-->\r\n                      <!--[validators]=\"inputTablePage.simple.table[1].tableData.validators\">-->\r\n        <!--</p-input-text>-->\r\n      </div>\r\n\r\n      <div class=\"input-table-wrapper\">\r\n        <button class=\"input-table-trigger\" (click)=\"isComplesTableVisible = !isComplesTableVisible\">\r\n          <p-icon class=\"input-table-trigger-icon\"\r\n                  name=\"chevron-down\"\r\n                  width=\"16\"\r\n                  height=\"auto\"\r\n                  strokeWidth=\"3\"></p-icon>\r\n          {{inputTablePage.complex.title}}\r\n        </button>\r\n        <div *ngIf=\"isComplexTableVisible\"\r\n             tabindex=\"-1\"\r\n             attr.aria-label=\"{{inputTablePage.complex.title}}\"\r\n             class=\"input-table-container\">\r\n          <table class=\"input-table\">\r\n            <tbody class=\"input-table-body\">\r\n            <ng-container *ngFor=\"let input of inputTablePage.complex.table\">\r\n              <tr class=\"input-table-row\">\r\n                <th class=\"input-table-header\">\r\n                  <span class=\"input-table-header-text\">{{input.tableHeader}}</span>\r\n                </th>\r\n                <td class=\"input-table-data\">\r\n                  <p-input-text [type]=\"input.tableData.type\"\r\n                                [label]=\"input.tableData.label\"\r\n                                [ariaLabel]=\"input.tableData.ariaLabel\"\r\n                                [placeholder]=\"input.tableData.placeholder\"\r\n                                [errorMessage]=\"input.tableData.errorMessage\"\r\n                                [disabled]=\"input.tableData.disabled\"\r\n                                [readonly]=\"input.tableData.readonly\"\r\n                                [value]=\"input.tableData.value\"\r\n                                [validators]=\"input.tableData.validators\">\r\n                  </p-input-text>\r\n                </td>\r\n              </tr>\r\n            </ng-container>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </main>\r\n</div>\r\n"
        },
        {
            "name": "RadioButtonComponent",
            "id": "component-RadioButtonComponent-7541bda88f3d6a7eb3331cff580487be",
            "file": "src/stories/radio-button/radio-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-radio-button",
            "styleUrls": [
                "./radio-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./radio-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'p-radio-button',\r\n  templateUrl: './radio-button.component.html',\r\n  styleUrls: ['./radio-button.component.scss'],\r\n})\r\nexport default class RadioButtonComponent {\r\n  @Input() label: string;\r\n  @Input() ariaLabel: string;\r\n  @Input() checked: boolean = false;\r\n  @Input() disabled: boolean = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../assets/styles/custom\";\r\n\r\n$radio-button-size: 16px;\r\n\r\n::ng-deep .p-radio-button {\r\n  // material styles override\r\n  .mat-radio-label-content {\r\n    font-family: $font-family-basic;\r\n    font-weight: 400;\r\n    font-size: $small-font-size;\r\n    text-transform: capitalize;\r\n    color: $primary-a-900;\r\n  }\r\n\r\n  .mat-radio-container {\r\n    width: $radio-button-size;\r\n    height: $radio-button-size;\r\n  }\r\n\r\n  .mat-radio-outer-circle {\r\n    width: $radio-button-size;\r\n    height: $radio-button-size;\r\n    background-color: $gray-scale-1;\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    border-radius: 50%;\r\n    border-color: $gray-scale-400;\r\n  }\r\n\r\n  .mat-radio-ripple {\r\n    display: none;\r\n  }\r\n\r\n  // hover\r\n  &:hover {\r\n    .mat-radio-outer-circle {\r\n      border-color: $secondary-a-700;\r\n    }\r\n  }\r\n\r\n  // focus\r\n  &.cdk-focused {\r\n    .mat-radio-outer-circle {\r\n      border-color: $secondary-a-700;\r\n    }\r\n  }\r\n\r\n  // disabled\r\n  &.mat-radio-button.mat-radio-disabled {\r\n    .mat-radio-outer-circle {\r\n      background-color: $primary-c-50;\r\n      border-color: $gray-scale-400;\r\n    }\r\n    .mat-radio-label-content {\r\n      color: $gray-scale-600;\r\n    }\r\n  }\r\n\r\n  // checked\r\n  &.mat-radio-button.mat-accent.mat-radio-checked {\r\n    .mat-radio-outer-circle {\r\n      border-color: $secondary-a-700;\r\n    }\r\n    .mat-radio-inner-circle {\r\n      height: $radio-button-size;\r\n      width: $radio-button-size;\r\n      background-color: $secondary-a-700;\r\n    }\r\n\r\n    // checked + hover\r\n    &:hover {\r\n      .mat-radio-inner-circle {\r\n        background-color: $secondary-a-800;\r\n      }\r\n    }\r\n\r\n    // checked + focus\r\n    &.cdk-focused {\r\n      .mat-radio-inner-circle {\r\n        background-color: $secondary-a-800;\r\n      }\r\n    }\r\n\r\n    // checked + disabled\r\n    &.mat-radio-disabled {\r\n      .mat-radio-outer-circle {\r\n        background-color: $gray-scale-1;\r\n        border-color: $secondary-a-100;\r\n      }\r\n      .mat-radio-inner-circle {\r\n        background-color: $secondary-a-100;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./radio-button.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-radio-button class=\"p-radio-button\"\r\n                  [value]=\"value\"\r\n                  [disabled]=\"disabled\"\r\n                  [checked]=\"checked\">\r\n  {{label}}\r\n</mat-radio-button>\r\n"
        },
        {
            "name": "RadioButtonGroup",
            "id": "component-RadioButtonGroup-5d9092649e1467ddefa9714a6e86732f",
            "file": "src/stories/radio-button/radio-button-group/radio-button-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-radio-group",
            "styleUrls": [
                "./radio-button-group.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./radio-button-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "errorMessage",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "label",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "optionsList",
                    "line": 12,
                    "type": "IRadioButton[]"
                },
                {
                    "name": "required",
                    "defaultValue": "false",
                    "line": 17,
                    "type": "boolean"
                },
                {
                    "name": "selected",
                    "line": 15,
                    "type": "any"
                },
                {
                    "name": "validators",
                    "line": 18,
                    "type": "ValidatorFn[]"
                },
                {
                    "name": "value",
                    "line": 14,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "fieldFormControl",
                    "type": "FormControl",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\r\nimport IRadioButton from '../radio-button.interface';\r\nimport {FormControl, ValidatorFn} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'p-radio-group',\r\n  templateUrl: './radio-button-group.component.html',\r\n  styleUrls: ['./radio-button-group.component.scss'],\r\n})\r\nexport default class RadioButtonGroup implements OnInit {\r\n  @Input() label: string;\r\n  @Input() optionsList: IRadioButton[];\r\n  @Input() errorMessage: string;\r\n  @Input() value: any;\r\n  @Input() selected: any;\r\n  @Input() disabled: boolean = false;\r\n  @Input() required: boolean = false;\r\n  @Input() validators: ValidatorFn[];\r\n  public fieldFormControl: FormControl;\r\n\r\n  ngOnInit(): void {\r\n    this.fieldFormControl = new FormControl(\r\n      {value: this.value, disabled: this.disabled},\r\n      this.validators);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../assets/styles/custom\";\r\n\r\n$radio-button-size: 16px;\r\n\r\n::ng-deep .p-radio-button {\r\n  // material styles override\r\n  .mat-radio-label-content {\r\n    font-family: $font-family-basic;\r\n    font-weight: 400;\r\n    font-size: $small-font-size;\r\n    text-transform: capitalize;\r\n    color: $primary-a-900;\r\n  }\r\n\r\n  .mat-radio-container {\r\n    width: $radio-button-size;\r\n    height: $radio-button-size;\r\n  }\r\n\r\n  .mat-radio-outer-circle {\r\n    width: $radio-button-size;\r\n    height: $radio-button-size;\r\n    background-color: $gray-scale-1;\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    border-radius: 50%;\r\n    border-color: $gray-scale-400;\r\n  }\r\n\r\n  .mat-radio-ripple {\r\n    display: none;\r\n  }\r\n\r\n  // hover\r\n  &:hover {\r\n    .mat-radio-outer-circle {\r\n      border-color: $secondary-a-700;\r\n    }\r\n  }\r\n\r\n  // focus\r\n  &.cdk-focused {\r\n    .mat-radio-outer-circle {\r\n      border-color: $secondary-a-700;\r\n    }\r\n  }\r\n\r\n  // disabled\r\n  &.mat-radio-button.mat-radio-disabled {\r\n    .mat-radio-outer-circle {\r\n      background-color: $primary-c-50;\r\n      border-color: $gray-scale-400;\r\n    }\r\n    .mat-radio-label-content {\r\n      color: $gray-scale-600;\r\n    }\r\n  }\r\n\r\n  // checked\r\n  &.mat-radio-button.mat-accent.mat-radio-checked {\r\n    .mat-radio-outer-circle {\r\n      border-color: $secondary-a-700;\r\n    }\r\n    .mat-radio-inner-circle {\r\n      height: $radio-button-size;\r\n      width: $radio-button-size;\r\n      background-color: $secondary-a-700;\r\n    }\r\n\r\n    // checked + hover\r\n    &:hover {\r\n      .mat-radio-inner-circle {\r\n        background-color: $secondary-a-800;\r\n      }\r\n    }\r\n\r\n    // checked + focus\r\n    &.cdk-focused {\r\n      .mat-radio-inner-circle {\r\n        background-color: $secondary-a-800;\r\n      }\r\n    }\r\n\r\n    // checked + disabled\r\n    &.mat-radio-disabled {\r\n      .mat-radio-outer-circle {\r\n        background-color: $gray-scale-1;\r\n        border-color: $secondary-a-100;\r\n      }\r\n      .mat-radio-inner-circle {\r\n        background-color: $secondary-a-100;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./radio-button-group.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-radio-group class=\"p-radio-group\"\r\n                 [formControl]=\"fieldFormControl\"\r\n                 [class.invalid-field]=\"fieldFormControl.invalid && (fieldFormControl.touched || formControlHost.submitted)\">\r\n  <label class=\"p-radio-group-label\">{{label}}</label>\r\n  <p-radio-button class=\"p-radio-group-option\"\r\n                  *ngFor=\"let option of optionsList\"\r\n                  [value]=\"option\"\r\n                  [label]=\"label\"\r\n                  [ariaLabel]=\"ariaLabel\"\r\n                  [checked]=\"checked\"\r\n                  [disabled]=\"disabled\">\r\n  </p-radio-button>\r\n  <mat-error *ngIf=\"fieldFormControl.errors\">\r\n    {{errorMessage}}\r\n  </mat-error>\r\n</mat-radio-group>\r\n"
        },
        {
            "name": "SlideToggleComponent",
            "id": "component-SlideToggleComponent-26248c0809d38e231de75e570be8b19a",
            "file": "src/stories/slide-toggle/slide-toggle.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-slide-toggle",
            "styleUrls": [
                "./slide-toggle.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./slide-toggle.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "ariaLabel",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 12,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "line": 9,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'p-slide-toggle',\r\n  templateUrl: './slide-toggle.component.html',\r\n  styleUrls: ['./slide-toggle.component.scss'],\r\n})\r\nexport default class SlideToggleComponent {\r\n  @Input() label: string;\r\n  @Input() ariaLabel: string;\r\n  @Input() checked: boolean = false;\r\n  @Input() disabled: boolean = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../assets/styles/custom\";\r\n\r\n.p-slide-toggle {\r\n  // material styles override\r\n  ::ng-deep &.mat-slide-toggle {\r\n    .mat-slide-toggle-bar {\r\n      width: 48px;\r\n      height: 24px;\r\n      background-color: $gray-scale-500;\r\n      border-radius: 24px;\r\n      box-sizing: content-box;\r\n    }\r\n    .mat-slide-toggle-thumb-container {\r\n      top: 2px;\r\n      left: 2px;\r\n    }\r\n    .mat-slide-toggle-thumb {\r\n      background-color: $gray-scale-1;\r\n      box-shadow: 0 0 4px 1px rgba(0, 0, 0, 0.2);\r\n    }\r\n    .mat-slide-toggle-content {\r\n      font-family: $font-family-basic;\r\n      font-size: $small-font-size;\r\n      font-weight: 500;\r\n    }\r\n    .mat-slide-toggle-ripple {\r\n      display: none;\r\n    }\r\n\r\n    // hover\r\n    &:hover {\r\n      .mat-slide-toggle-bar {\r\n        background-color: $gray-scale-700;\r\n      }\r\n    }\r\n\r\n    // focus\r\n    &.cdk-focused {\r\n      .mat-slide-toggle-bar {\r\n        background-color: $gray-scale-700;\r\n        //border: 2px solid $gray-scale-100;\r\n      }\r\n    }\r\n\r\n    // disabled\r\n    &.mat-disabled {\r\n      opacity: 1;\r\n      .mat-slide-toggle-bar {\r\n        background-color: $gray-scale-50;\r\n      }\r\n      .mat-slide-toggle-thumb {\r\n        box-shadow: none;\r\n      }\r\n      .mat-slide-toggle-content {\r\n        color: $gray-scale-700;\r\n      }\r\n    }\r\n\r\n    // checked\r\n    &.mat-checked {\r\n      .mat-slide-toggle-bar {\r\n        background-color: $secondary-a-700;\r\n      }\r\n      .mat-slide-toggle-thumb-container {\r\n        transform: translate3d(24px, 0, 0);\r\n      }\r\n      .mat-slide-toggle-thumb {\r\n        box-shadow: 0 0 3px $secondary-a-800;\r\n      }\r\n      // checked + hover\r\n      &:hover {\r\n        .mat-slide-toggle-bar {\r\n          background-color: $secondary-a-800;\r\n        }\r\n      }\r\n      // checked + focus\r\n      &.cdk-focused {\r\n        .mat-slide-toggle-bar {\r\n          //border: 2px solid $secondary-a-200;\r\n        }\r\n      }\r\n      // checked + disabled\r\n      &.mat-disabled {\r\n        .mat-slide-toggle-bar {\r\n           background-color: $secondary-a-100;\r\n        }\r\n        .mat-slide-toggle-thumb {\r\n          width: 19px;\r\n          height: 19px;\r\n          box-shadow: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // icons added\r\n  ::ng-deep &.mat-slide-toggle {\r\n    .mat-slide-toggle-bar {\r\n      &:before {\r\n        content: '';\r\n        display: block;\r\n        width: 15px;\r\n        height: 12px;\r\n        background-image: url('../assets/images/check.svg');\r\n        background-position: center center;\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n        position: absolute;\r\n        top: 6px;\r\n        left: 7px;\r\n      }\r\n      &:after {\r\n        content: '';\r\n        display: block;\r\n        width: 15px;\r\n        height: 15px;\r\n        background-image: url('../assets/images/x.svg');\r\n        background-position: center center;\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n        position: absolute;\r\n        top: 4px;\r\n        right: 5px;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./slide-toggle.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<mat-slide-toggle\r\n  class=\"p-slide-toggle\"\r\n  [aria-label]=\"ariaLabel\"\r\n  [checked]=\"checked\"\r\n  [disabled]=\"disabled\">\r\n  <ng-container *ngIf=\"label\">\r\n    {{label}}\r\n  </ng-container>\r\n</mat-slide-toggle>\r\n"
        },
        {
            "name": "SlideTogglePageComponent",
            "id": "component-SlideTogglePageComponent-87ecb55a426c34533bc5fbb8203286c6",
            "file": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-slide-toggle-page",
            "styleUrls": [
                "./slide-toggle-page.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./slide-toggle-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "slideTogglePage",
                    "line": 10,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "originalOrder",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\nimport {KeyValue} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'p-slide-toggle-page',\r\n  templateUrl: './slide-toggle-page.component.html',\r\n  styleUrls: ['./slide-toggle-page.component.scss'],\r\n})\r\nexport default class SlideTogglePageComponent {\r\n  @Input() slideTogglePage: any;\r\n\r\n  originalOrder = (a: KeyValue<number, string>, b: KeyValue<number, string>): number => {\r\n    return 0;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".slide-toggles {\r\n  .content-list {\r\n    min-width: 175px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./slide-toggle-page.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"page slide-toggles\">\r\n    <header class=\"page-header\">\r\n      <h1 class=\"page-title\">Toggle / <span class=\"page-header-highlighted\">Items</span></h1>\r\n    </header>\r\n\r\n    <main class=\"page-main\">\r\n      <ul class=\"page-list header-list\">\r\n        <li class=\"list-header\"></li>\r\n        <li class=\"list-header\">[checked]=true</li>\r\n        <li class=\"list-header\">\r\n          [checked]=true\r\n          <br/>\r\n          [disabled]=true\r\n        </li>\r\n        <li class=\"list-header\">\r\n          [checked]=false\r\n        </li>\r\n        <li class=\"list-header\">\r\n          [checked]=false\r\n          <br/>\r\n          [disabled]=true\r\n        </li>\r\n      </ul>\r\n\r\n      <ul *ngFor=\"let toggleType of slideTogglePage | keyvalue: originalOrder\"\r\n          class=\"page-list content-list {{toggleType.key}}\">\r\n        <li class=\"list-header\">\r\n          [{{toggleType.key}}]=\"Label\"\r\n        </li>\r\n        <li *ngFor=\"let toggle of toggleType.value\" class=\"list-item\">\r\n          <p-slide-toggle [label]=\"toggle.label\"\r\n                          [ariaLabel]=\"toggle.ariaLabel\"\r\n                          [checked]=\"toggle.checked\"\r\n                          [disabled]=\"toggle.disabled\">\r\n          </p-slide-toggle>\r\n        </li>\r\n      </ul>\r\n\r\n    </main>\r\n</div>\r\n"
        },
        {
            "name": "TooltipComponent",
            "id": "component-TooltipComponent-d9cd1d598549bc0da6c95ebd40971277",
            "file": "src/stories/tooltip/tooltip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-tooltip",
            "styleUrls": [
                "./tooltip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./tooltip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "line": 11,
                    "type": "boolean"
                },
                {
                    "name": "hideDelay",
                    "line": 13,
                    "type": "number"
                },
                {
                    "name": "message",
                    "line": 10,
                    "type": "string"
                },
                {
                    "name": "position",
                    "line": 14,
                    "type": "TooltipPosition"
                },
                {
                    "name": "showDelay",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "tooltipClass",
                    "line": 15,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\r\nimport {TooltipPosition} from '@angular/material/tooltip';\r\n\r\n@Component({\r\n  selector: 'p-tooltip',\r\n  templateUrl: './tooltip.component.html',\r\n  styleUrls: ['./tooltip.component.scss'],\r\n})\r\nexport default class TooltipComponent {\r\n  @Input() message: string;\r\n  @Input() disabled: boolean = false;\r\n  @Input() showDelay: number; // ms\r\n  @Input() hideDelay: number; // ms\r\n  @Input() position: TooltipPosition; // type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\r\n  @Input() tooltipClass: any; // css class\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../assets/styles/custom\";\r\n\r\n.p-icon {\r\n  display: inline-flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n",
                    "styleUrl": "./tooltip.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<p-button label=\"Label\"\r\n          #tooltip=\"matTooltip\"\r\n          [message]=\"message\"\r\n          [disabled]=\"disabled\"\r\n          [showDelay]=\"showDelay\"\r\n          [hideDelay]=\"hideDelay\"\r\n          [position]=\"position\"\r\n        >\r\n</p-button>\r\n\r\n\r\n"
        },
        {
            "name": "TypographyFontFamilyComponent",
            "id": "component-TypographyFontFamilyComponent-7e114aa45068f95ee12d7ba8ac8ae279",
            "file": "src/stories/typography/font-family/typography-font-family.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-typography-font-family",
            "styleUrls": [
                "./typography-font-family.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./typography-font-family.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'p-typography-font-family',\r\n  templateUrl: './typography-font-family.component.html',\r\n  styleUrls: ['./typography-font-family.component.scss'],\r\n})\r\nexport default class TypographyFontFamilyComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../assets/styles/custom\";\r\n\r\n.page {\r\n  width: 1440px;\r\n}\r\n\r\n.font-family {\r\n  display: flex;\r\n  justify-content: stretch;\r\n  width: 1800px;\r\n  font-size: 18px;\r\n  color: $primary-a-900;\r\n  line-height: 24.44px;\r\n\r\n  &-accent-container {\r\n    font-family: $font-family-accent;\r\n    width: 530px;\r\n    margin-right: 75px;\r\n  }\r\n\r\n  &-basic-container {\r\n    font-family: $font-family-basic;\r\n    width: 605px;\r\n  }\r\n\r\n  &-title {\r\n    font-weight: 700;\r\n    font-size: 40px;\r\n    line-height: 40.72px;\r\n    margin-bottom: 26px;\r\n  }\r\n\r\n  &-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  &-example {\r\n    width: 159px;\r\n    margin-top: 64px;\r\n    margin-right: 78px;\r\n  }\r\n\r\n  &-weight {\r\n    margin-bottom: 26px;\r\n  }\r\n\r\n  &-sample {\r\n    line-break: anywhere;\r\n  }\r\n\r\n  &-class {\r\n    font-weight: 400;\r\n    color: $gray-scale-700;\r\n    margin-top: 20px;\r\n  }\r\n\r\n}\r\n\r\n",
                    "styleUrl": "./typography-font-family.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"page\">\r\n  <header class=\"page-header\">\r\n    <h1 class=\"page-title\">Typography / <span class=\"page-title-highlighted\">Font families</span></h1>\r\n  </header>\r\n\r\n  <main class=\"page-main\">\r\n    <div class=\"font-family\">\r\n    <div class=\"font-family-accent font-family-accent-container\">\r\n      <h2 class=\"font-family-title\">Source Sans Pro</h2>\r\n      <p class=\"font-family-description\">Used only in caps, bold and 5% letter spacing, on headlines and highlighted areas such as menus, tabs, page titles, etc.</p>\r\n      <div class=\"font-family-list\">\r\n        <div class=\"font-family-example weight-bold\">\r\n          <h3 class=\"font-family-weight\">Bold</h3>\r\n          <p class=\"font-family-sample\">ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890/?.,<>’”;:!@#$%^&*()~`</p>\r\n          <p class=\"font-family-class\">\r\n            $font-family-accent\r\n            <br/>\r\n            .font-family-accent\r\n            <br/>\r\n            .weight-bold\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"font-family-basic font-family-basic-container\">\r\n      <h2 class=\"font-family-title\">Inter</h2>\r\n      <p class=\"font-family-description\">Used in all the text of the paragraphs and wherever there is text in the lower case such as subheadings, buttons, etc.</p>\r\n      <div class=\"font-family-list\">\r\n        <div class=\"font-family-example weight-regular\">\r\n          <h3 class=\"font-family-weight\">Regular</h3>\r\n          <p class=\"font-family-sample\">ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890/?.,<>’”;:!@#$%^&*()~`</p>\r\n          <p class=\"font-family-class\">\r\n            $font-family-basic\r\n            <br/>\r\n            .font-family-basic\r\n            <br/>\r\n            .weight-regular\r\n          </p>\r\n        </div>\r\n        <div class=\"font-family-example weight-medium\">\r\n          <h3 class=\"font-family-weight\">Medium</h3>\r\n          <p class=\"font-family-sample\">ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890/?.,<>’”;:!@#$%^&*()~`</p>\r\n          <p class=\"font-family-class\">\r\n            $font-family-basic\r\n            <br/>\r\n            .font-family-basic\r\n            <br/>\r\n            .weight-medium\r\n          </p>\r\n        </div>\r\n        <div class=\"font-family-example weight-semi-bold\">\r\n          <h3 class=\"font-family-weight\">Semi Bold</h3>\r\n          <p class=\"font-family-sample\">ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890/?.,<>’”;:!@#$%^&*()~`</p>\r\n          <p class=\"font-family-class\">\r\n            $font-family-basic\r\n            <br/>\r\n            .font-family-basic\r\n            <br/>\r\n            .weight-semi-bold\r\n          </p>\r\n        </div>\r\n        <div class=\"font-family-example weight-bold\">\r\n          <h3 class=\"font-family-weight\">Bold</h3>\r\n          <p class=\"font-family-sample\">ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890/?.,<>’”;:!@#$%^&*()~`</p>\r\n          <p class=\"font-family-class\">\r\n            $font-family-basic\r\n            <br/>\r\n            .font-family-basic\r\n            <br/>\r\n            .weight-bold\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </main>\r\n</div>\r\n"
        },
        {
            "name": "TypographyStylesComponent",
            "id": "component-TypographyStylesComponent-52dad9777d612ada57dc0772a8ebbdc3",
            "file": "src/stories/typography/styles/typography-styles.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "p-typography-styles",
            "styleUrls": [
                "./typography-styles.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./typography-styles.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "originalOrder",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 160
                },
                {
                    "name": "reverseKeyOrder",
                    "defaultValue": "() => {...}",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 164
                },
                {
                    "name": "typographyStyles",
                    "defaultValue": "typographyStyles",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 158,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\r\nimport {KeyValue} from '@angular/common';\r\n\r\n// class' properties are defined in styles-stories.scss\r\nconst typographyStyles = {\r\n  h1: {\r\n    title: 'Headline 1',\r\n    description: 'page header level 1',\r\n    sets: {\r\n      family: 'Source Sans Pro - Bold',\r\n      size: '18px',\r\n      letterSpacing: '5%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'Yes',\r\n      useCase: 'Page titles - level 1'\r\n    },\r\n    classes: ['headline-1-bold', 'headline-1-bold headline-contrast']\r\n  },\r\n  h1sub: {\r\n    title: 'Headline 1-sub',\r\n    description: 'page header level 2',\r\n    sets: {\r\n      family: 'Inter - SemiBold',\r\n      size: '16px',\r\n      letterSpacing: '5%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'No',\r\n      useCase: 'Page titles - level 2'\r\n    },\r\n    classes: ['headline-1-sub-semibold']\r\n  },\r\n  h2: {\r\n    title: 'Headline 2',\r\n    description: 'masthead menu',\r\n    sets: {\r\n      family: 'Source Sans Pro - Bold + SemiBold',\r\n      size: '15px',\r\n      letterSpacing: '8%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'Yes',\r\n      useCase: 'Masthead items. SemiBold for default text, Bold for selected, Bold green for Hover.',\r\n    },\r\n    classes: ['headline-2-bold', 'headline-2-semibold', 'headline-2-bold headline-contrast']\r\n  },\r\n  h3: {\r\n    title: 'Headline 3',\r\n    description: 'masthead sub menu',\r\n    sets: {\r\n      family: 'Source Sans Pro - Regular + SemiBold',\r\n      size: '15px',\r\n      letterSpacing: '8%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'No',\r\n      useCase: 'Masthead sub menu items. Regular for default text, SemiBold green for hover and selected.'\r\n    },\r\n    classes: ['headline-3-regular', 'headline-3-semibold headline-contrast']\r\n  },\r\n  h4: {\r\n    title: 'Headline 4',\r\n    description: 'table header, status labels',\r\n    sets: {\r\n      family: 'Inter - Bold',\r\n      size: '12px',\r\n      letterSpacing: '5%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'Yes',\r\n      useCase: 'Table header row (black), Status labels (white)'\r\n    },\r\n    classes: ['headline-4-bold']\r\n  },\r\n  h5: {\r\n    title: 'Headline 5',\r\n    description: 'expansion panel title',\r\n    sets: {\r\n      family: 'Source Sans Pro - Bold',\r\n      size: '15px',\r\n      letterSpacing: '5%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'Yes',\r\n      useCase: 'Expansion panel title',\r\n    },\r\n    classes: ['headline-5-bold']\r\n  },\r\n  h6: {\r\n    title: 'Headline 6',\r\n    description: 'tabs',\r\n    family: 'Inter Bold / Semi Bold',\r\n    sets: {\r\n      size: '12px',\r\n      letterSpacing: '8%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'Yes',\r\n      useCase: 'Default tab - Bold, Selected tab - SemiBold'\r\n    },\r\n    classes: ['headline-6-bold', 'headline-3-semibold']\r\n  },\r\n  h7: {\r\n    title: 'Headline 7',\r\n    description: 'modal title',\r\n    sets: {\r\n      family: 'Inter Bold',\r\n      size: '22px',\r\n      letterSpacing: '0%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'No',\r\n      useCase: 'Modal title',\r\n    },\r\n    classes: ['headline-7-bold']\r\n  },\r\n  p1: {\r\n    title: 'Paragraph 1',\r\n    description: '',\r\n    sets: {\r\n      family: 'Inter - Regular',\r\n      size: '14px',\r\n      letterSpacing: '0%',\r\n      lineHeight: '20px',\r\n      capitals: 'No',\r\n      useCase: 'Paragraphs, Input text',\r\n    },\r\n    classes: ['paragraph-1-default', 'paragraph-1-link', 'paragraph-1-large-label']\r\n  },\r\n  p2: {\r\n    title: 'Paragraph 2',\r\n    description: '',\r\n    sets: {\r\n      family: 'Inter - Regular',\r\n      size: '13px',\r\n      letterSpacing: '0%',\r\n      lineHeight: '20px',\r\n      capitals: 'No',\r\n      useCase: 'Buttons, Actions, Filter, Drop down menu items, Notifications',\r\n    },\r\n    classes: ['paragraph-2-default', 'paragraph-2-link', 'paragraph-2-actions']\r\n  },\r\n  p3: {\r\n    title: 'Paragraph 3',\r\n    description: 'table content',\r\n    sets: {\r\n      family: 'Inter - Regular',\r\n      size: '12px',\r\n      letterSpacing: '0%',\r\n      lineHeight: '20px',\r\n      capitals: 'No',\r\n      useCase: 'Table content, Input top label',\r\n    },\r\n    classes: ['paragraph-3-default', 'paragraph-3-link', 'paragraph-3-medium', 'paragraph-3-semibold']\r\n  }\r\n};\r\n\r\n\r\n@Component({\r\n  selector: 'p-typography-styles',\r\n  templateUrl: './typography-styles.component.html',\r\n  styleUrls: ['./typography-styles.component.scss'],\r\n})\r\nexport default class TypographyStylesComponent {\r\n  public typographyStyles = typographyStyles;\r\n\r\n  originalOrder = (a: KeyValue<number, string>, b: KeyValue<number, string>): number => {\r\n    return 0;\r\n  }\r\n\r\n  reverseKeyOrder = (a: KeyValue<number, string>, b: KeyValue<number, string>): number => {\r\n    return -1;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../assets/styles/custom\";\r\n\r\n.page {\r\n  width: 1440px;\r\n}\r\n\r\n.font-style {\r\n  @include resetUl;\r\n\r\n  &-item {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    border-bottom: 1px solid $gray-scale-100;\r\n    margin-bottom: 32px;\r\n  }\r\n\r\n  &-top {\r\n    flex-basis: 100%;\r\n    margin-bottom: 15px;\r\n  }\r\n\r\n  &-title {\r\n    display: inline;\r\n    font-size: 24px;\r\n    font-weight: 900;\r\n    line-height: 29.26px;\r\n  }\r\n\r\n  &-description {\r\n    display: inline;\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    line-height: 29.26px;\r\n  }\r\n\r\n  &-desc {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 600px;\r\n    margin-right: 110px;\r\n  }\r\n\r\n  &-desc-set {\r\n    font-size: 14px;\r\n    line-height: 19.07px;\r\n    margin-top: 0;\r\n    margin-right: 40px;\r\n    margin-bottom: 25px;\r\n    &.family {\r\n      width: 145px;\r\n    }\r\n  }\r\n\r\n  &-desc-title {\r\n    color: $gray-scale-700;\r\n    margin-bottom: 10px;\r\n    .font-style-desc & {\r\n      text-transform: capitalize;\r\n    }\r\n  }\r\n\r\n  &-desc-data {\r\n    margin-left: 0;\r\n    .font-style-desc & {\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  &-ex-title {\r\n    font-size: 14px;\r\n    color: $gray-scale-700;\r\n    line-height: 19.07px;\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n\r\n",
                    "styleUrl": "./typography-styles.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"page\">\r\n  <header class=\"page-header\">\r\n    <h1 class=\"page-title\">Typography / <span class=\"page-title-highlighted\">Styles</span></h1>\r\n  </header>\r\n\r\n  <main class=\"page-main\">\r\n    <ul *ngIf=\"typographyStyles\" class=\"font-style\">\r\n      <li *ngFor=\"let item of typographyStyles | keyvalue: originalOrder\"\r\n          class=\"font-style-item\">\r\n        <div class=\"font-style-top\">\r\n          <h2 class=\"font-style-title\">{{ item.value.title }} </h2>\r\n          <p *ngIf=\"item.value.description\" class=\"font-style-description\">\r\n            ({{ item.value.description }})\r\n          </p>\r\n        </div>\r\n        <div class=\"font-style-desc\">\r\n          <dl *ngFor=\"let set of item.value.sets | keyvalue: originalOrder\"\r\n              class=\"font-style-desc-set {{ set.key }}\">\r\n            <dt class=\"font-style-desc-title\">{{ set.key }}</dt>\r\n            <dd class=\"font-style-desc-data\">{{ set.value}}</dd>\r\n          </dl>\r\n        </div>\r\n        <div class=\"font-style-preview\">\r\n          <div *ngFor=\"let example of item.value.classes\"\r\n               class=\"font-style-example\">\r\n            <dl class=\"font-style-desc-set\">\r\n              <dt class=\"font-style-desc-title\">.{{ example }}</dt>\r\n              <dd class=\"font-style-desc-data {{ example }}\">Lorem ipsum dolor sit amet</dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </main>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IconsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "All",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/button-page/button-page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Base",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/checkbox/checkbox-page/checkbox-page.stories.ts",
                "type": "",
                "defaultValue": "PageTemplate.bind({})"
            },
            {
                "name": "CheckboxGroup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/checkbox/checkbox-group/checkbox-group.stories.ts",
                "type": "",
                "defaultValue": "PageTemplate.bind({})"
            },
            {
                "name": "CheckboxTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/checkbox/checkbox.stories.ts",
                "type": "Story<CheckboxComponent>",
                "defaultValue": "(args: CheckboxComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "ColorPalette",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/colors/Color-palette.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Distructive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "ErrorMessage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/input-text/input-text.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ErrorState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/input-text/input-text.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Examples",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/checkbox/checkbox-group-page/checkbox-group-page.stories.ts",
                "type": "",
                "defaultValue": "PageTemplate.bind({})"
            },
            {
                "name": "Fonts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/typography/font-family/typography-font-family.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/checkbox/checkbox.stories.ts",
                "type": "",
                "defaultValue": "CheckboxTemplate.bind({})"
            },
            {
                "name": "NoLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/input-text/input-text.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NoLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.stories.ts",
                "type": "",
                "defaultValue": "SlideToggleTemplate.bind({})"
            },
            {
                "name": "Page",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/input-text/input-text-page/input-text-page.stories.ts",
                "type": "",
                "defaultValue": "PageTemplate.bind({})"
            },
            {
                "name": "PageTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/checkbox/checkbox-group/checkbox-group.stories.ts",
                "type": "Story<CheckboxGroupComponent>",
                "defaultValue": "(args: CheckboxGroupComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "PageTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/checkbox/checkbox-page/checkbox-page.stories.ts",
                "type": "Story<CheckboxPageComponent>",
                "defaultValue": "(args: CheckboxPageComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "PageTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/checkbox/checkbox-group-page/checkbox-group-page.stories.ts",
                "type": "Story<CheckboxGroupPageComponent>",
                "defaultValue": "(args: CheckboxGroupPageComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "PageTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.stories.ts",
                "type": "Story<SlideTogglePageComponent>",
                "defaultValue": "(args: SlideTogglePageComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "PageTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/input-text/input-text-table-layout/input-text-table-layout.stories.ts",
                "type": "Story<InputTextTableLayoutComponent>",
                "defaultValue": "(args: InputTextTableLayoutComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "PageTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/input-text/input-text-page/input-text-page.stories.ts",
                "type": "Story<InputTextPageComponent>",
                "defaultValue": "(args: InputTextPageComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "palette",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/colors/color-palette.component.ts",
                "type": "object",
                "defaultValue": "{\r\n  primary: {\r\n    a: {\r\n      900: {name: 'P-A 900', labelColor: 'white'}\r\n    },\r\n    b: {\r\n      300: { name: 'P-B 300', labelColor: 'white' }\r\n    },\r\n    c: {\r\n      50: {name: 'P-C 50', labelColor: 'black'}\r\n    }\r\n  },\r\n  secondary: {\r\n    a: { 800: { name: 'S-A 800', labelColor: 'white' },\r\n      700: { name: 'S-A 700', labelColor: 'white' },\r\n      600: { name: 'S-A 600', labelColor: 'white' },\r\n      500: { name: 'S-A 500', labelColor: 'black' },\r\n      200: { name: 'S-A 200', labelColor: 'black' },\r\n      100: { name: 'S-A 100', labelColor: 'black' },\r\n      50: { name: 'S-A 50', labelColor: 'black' } },\r\n    b: { 700: { name: 'S-B 700', labelColor: 'white' },\r\n      500: { name: 'S-B 500', labelColor: 'white' },\r\n      400: { name: 'S-B 400', labelColor: 'white' },\r\n      300: { name: 'S-B 300', labelColor: 'white' },\r\n      200: { name: 'S-B 200', labelColor: 'black' },\r\n      100: { name: 'S-B 100', labelColor: 'black' },\r\n      50: { name: 'S-B 500', labelColor: 'black' }\r\n    }\r\n  },\r\n  gray: {\r\n    scale: { 800: { name: 'grayscale 800', labelColor: 'white' },\r\n        700: { name: 'grayscale 700', labelColor: 'white' },\r\n        600: { name: 'grayscale 600', labelColor: 'white' },\r\n        500: { name: 'grayscale 500', labelColor: 'white' },\r\n        400: { name: 'grayscale 400', labelColor: 'black' },\r\n        100: { name: 'grayscale 100', labelColor: 'black' },\r\n        50: { name: 'grayscale 50', labelColor: 'black' },\r\n        5: { name: 'grayscale 5', labelColor: 'black' },\r\n        1: { name: 'grayscale 1', labelColor: 'black' }\r\n    }\r\n  },\r\n  supportive: {\r\n    alert: {\r\n      700: { name: 'Alert 700', labelColor: 'white' },\r\n      500: { name: 'Alert 500', labelColor: 'black' },\r\n      50: { name: 'Alert 50', labelColor: 'black' }\r\n    },\r\n    yellow: { 300: { name: 'Yellow 300', labelColor: 'black' } },\r\n    orange: {\r\n      300: { name: 'Orange 300', labelColor: 'black' },\r\n      50: { name: 'Orange 50', labelColor: 'black' }\r\n    },\r\n    success: {\r\n      400: { name: 'Success 400', labelColor: 'black' },\r\n      50: { name: 'Success 50', labelColor: 'black' }\r\n    },\r\n    dev: {\r\n      a: { name: 'Dev A', labelColor: 'white' },\r\n      b: { name: 'Dev B', labelColor: 'white' },\r\n      c: { name: 'Dev C', labelColor: 'white' }\r\n    }\r\n  }\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/tooltip/tooltip.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SlideToggleTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.stories.ts",
                "type": "Story<SlideToggleComponent>",
                "defaultValue": "(args: SlideToggleComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Styles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/typography/styles/typography-styles.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Table",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/input-text/input-text-table-layout/input-text-table-layout.stories.ts",
                "type": "",
                "defaultValue": "PageTemplate.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/colors/Color-palette.stories.ts",
                "type": "Story<ColorPaletteComponent>",
                "defaultValue": "(args: ColorPaletteComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/button.stories.ts",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/input-text/input-text.stories.ts",
                "type": "Story<InputTextComponent>",
                "defaultValue": "(args: InputTextComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/tooltip/tooltip.stories.ts",
                "type": "Story<TooltipComponent>",
                "defaultValue": "(args: TooltipComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/button-page/button-page.stories.ts",
                "type": "Story<ButtonPageComponent>",
                "defaultValue": "(args: ButtonPageComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/typography/font-family/typography-font-family.stories.ts",
                "type": "Story<TypographyFontFamilyComponent>",
                "defaultValue": "(args: TypographyFontFamilyComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/typography/styles/typography-styles.stories.ts",
                "type": "Story<TypographyStylesComponent>",
                "defaultValue": "(args: TypographyStylesComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Tertiary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button/button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Toggles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.stories.ts",
                "type": "",
                "defaultValue": "PageTemplate.bind({})"
            },
            {
                "name": "typographyStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/typography/styles/typography-styles.component.ts",
                "type": "object",
                "defaultValue": "{\r\n  h1: {\r\n    title: 'Headline 1',\r\n    description: 'page header level 1',\r\n    sets: {\r\n      family: 'Source Sans Pro - Bold',\r\n      size: '18px',\r\n      letterSpacing: '5%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'Yes',\r\n      useCase: 'Page titles - level 1'\r\n    },\r\n    classes: ['headline-1-bold', 'headline-1-bold headline-contrast']\r\n  },\r\n  h1sub: {\r\n    title: 'Headline 1-sub',\r\n    description: 'page header level 2',\r\n    sets: {\r\n      family: 'Inter - SemiBold',\r\n      size: '16px',\r\n      letterSpacing: '5%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'No',\r\n      useCase: 'Page titles - level 2'\r\n    },\r\n    classes: ['headline-1-sub-semibold']\r\n  },\r\n  h2: {\r\n    title: 'Headline 2',\r\n    description: 'masthead menu',\r\n    sets: {\r\n      family: 'Source Sans Pro - Bold + SemiBold',\r\n      size: '15px',\r\n      letterSpacing: '8%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'Yes',\r\n      useCase: 'Masthead items. SemiBold for default text, Bold for selected, Bold green for Hover.',\r\n    },\r\n    classes: ['headline-2-bold', 'headline-2-semibold', 'headline-2-bold headline-contrast']\r\n  },\r\n  h3: {\r\n    title: 'Headline 3',\r\n    description: 'masthead sub menu',\r\n    sets: {\r\n      family: 'Source Sans Pro - Regular + SemiBold',\r\n      size: '15px',\r\n      letterSpacing: '8%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'No',\r\n      useCase: 'Masthead sub menu items. Regular for default text, SemiBold green for hover and selected.'\r\n    },\r\n    classes: ['headline-3-regular', 'headline-3-semibold headline-contrast']\r\n  },\r\n  h4: {\r\n    title: 'Headline 4',\r\n    description: 'table header, status labels',\r\n    sets: {\r\n      family: 'Inter - Bold',\r\n      size: '12px',\r\n      letterSpacing: '5%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'Yes',\r\n      useCase: 'Table header row (black), Status labels (white)'\r\n    },\r\n    classes: ['headline-4-bold']\r\n  },\r\n  h5: {\r\n    title: 'Headline 5',\r\n    description: 'expansion panel title',\r\n    sets: {\r\n      family: 'Source Sans Pro - Bold',\r\n      size: '15px',\r\n      letterSpacing: '5%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'Yes',\r\n      useCase: 'Expansion panel title',\r\n    },\r\n    classes: ['headline-5-bold']\r\n  },\r\n  h6: {\r\n    title: 'Headline 6',\r\n    description: 'tabs',\r\n    family: 'Inter Bold / Semi Bold',\r\n    sets: {\r\n      size: '12px',\r\n      letterSpacing: '8%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'Yes',\r\n      useCase: 'Default tab - Bold, Selected tab - SemiBold'\r\n    },\r\n    classes: ['headline-6-bold', 'headline-3-semibold']\r\n  },\r\n  h7: {\r\n    title: 'Headline 7',\r\n    description: 'modal title',\r\n    sets: {\r\n      family: 'Inter Bold',\r\n      size: '22px',\r\n      letterSpacing: '0%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'No',\r\n      useCase: 'Modal title',\r\n    },\r\n    classes: ['headline-7-bold']\r\n  },\r\n  p1: {\r\n    title: 'Paragraph 1',\r\n    description: '',\r\n    sets: {\r\n      family: 'Inter - Regular',\r\n      size: '14px',\r\n      letterSpacing: '0%',\r\n      lineHeight: '20px',\r\n      capitals: 'No',\r\n      useCase: 'Paragraphs, Input text',\r\n    },\r\n    classes: ['paragraph-1-default', 'paragraph-1-link', 'paragraph-1-large-label']\r\n  },\r\n  p2: {\r\n    title: 'Paragraph 2',\r\n    description: '',\r\n    sets: {\r\n      family: 'Inter - Regular',\r\n      size: '13px',\r\n      letterSpacing: '0%',\r\n      lineHeight: '20px',\r\n      capitals: 'No',\r\n      useCase: 'Buttons, Actions, Filter, Drop down menu items, Notifications',\r\n    },\r\n    classes: ['paragraph-2-default', 'paragraph-2-link', 'paragraph-2-actions']\r\n  },\r\n  p3: {\r\n    title: 'Paragraph 3',\r\n    description: 'table content',\r\n    sets: {\r\n      family: 'Inter - Regular',\r\n      size: '12px',\r\n      letterSpacing: '0%',\r\n      lineHeight: '20px',\r\n      capitals: 'No',\r\n      useCase: 'Table content, Input top label',\r\n    },\r\n    classes: ['paragraph-3-default', 'paragraph-3-link', 'paragraph-3-medium', 'paragraph-3-semibold']\r\n  }\r\n}"
            },
            {
                "name": "WithLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/checkbox/checkbox.stories.ts",
                "type": "",
                "defaultValue": "CheckboxTemplate.bind({})"
            },
            {
                "name": "WithLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/input-text/input-text.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.stories.ts",
                "type": "",
                "defaultValue": "SlideToggleTemplate.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "ButtonTypeEnum",
                "childs": [
                    {
                        "name": "Primary",
                        "value": "primary"
                    },
                    {
                        "name": "Secondary",
                        "value": "secondary"
                    },
                    {
                        "name": "Tertiary",
                        "value": "tertiary"
                    },
                    {
                        "name": "Distructive",
                        "value": "distructive"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/stories/button/button-page/button-type.enum.ts"
            }
        ],
        "groupedVariables": {
            "src/stories/button/button-page/button-page.stories.ts": [
                {
                    "name": "All",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/button-page/button-page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/button-page/button-page.stories.ts",
                    "type": "Story<ButtonPageComponent>",
                    "defaultValue": "(args: ButtonPageComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/checkbox/checkbox-page/checkbox-page.stories.ts": [
                {
                    "name": "Base",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/checkbox/checkbox-page/checkbox-page.stories.ts",
                    "type": "",
                    "defaultValue": "PageTemplate.bind({})"
                },
                {
                    "name": "PageTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/checkbox/checkbox-page/checkbox-page.stories.ts",
                    "type": "Story<CheckboxPageComponent>",
                    "defaultValue": "(args: CheckboxPageComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/checkbox/checkbox-group/checkbox-group.stories.ts": [
                {
                    "name": "CheckboxGroup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/checkbox/checkbox-group/checkbox-group.stories.ts",
                    "type": "",
                    "defaultValue": "PageTemplate.bind({})"
                },
                {
                    "name": "PageTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/checkbox/checkbox-group/checkbox-group.stories.ts",
                    "type": "Story<CheckboxGroupComponent>",
                    "defaultValue": "(args: CheckboxGroupComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/checkbox/checkbox.stories.ts": [
                {
                    "name": "CheckboxTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/checkbox/checkbox.stories.ts",
                    "type": "Story<CheckboxComponent>",
                    "defaultValue": "(args: CheckboxComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "NoLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/checkbox/checkbox.stories.ts",
                    "type": "",
                    "defaultValue": "CheckboxTemplate.bind({})"
                },
                {
                    "name": "WithLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/checkbox/checkbox.stories.ts",
                    "type": "",
                    "defaultValue": "CheckboxTemplate.bind({})"
                }
            ],
            "src/stories/colors/Color-palette.stories.ts": [
                {
                    "name": "ColorPalette",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/colors/Color-palette.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/colors/Color-palette.stories.ts",
                    "type": "Story<ColorPaletteComponent>",
                    "defaultValue": "(args: ColorPaletteComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/stories/button/button.stories.ts": [
                {
                    "name": "Distructive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/button.stories.ts",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "Tertiary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button/button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "src/stories/input-text/input-text.stories.ts": [
                {
                    "name": "ErrorMessage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/input-text/input-text.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ErrorState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/input-text/input-text.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/input-text/input-text.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/input-text/input-text.stories.ts",
                    "type": "Story<InputTextComponent>",
                    "defaultValue": "(args: InputTextComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "WithLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/input-text/input-text.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "src/stories/checkbox/checkbox-group-page/checkbox-group-page.stories.ts": [
                {
                    "name": "Examples",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/checkbox/checkbox-group-page/checkbox-group-page.stories.ts",
                    "type": "",
                    "defaultValue": "PageTemplate.bind({})"
                },
                {
                    "name": "PageTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/checkbox/checkbox-group-page/checkbox-group-page.stories.ts",
                    "type": "Story<CheckboxGroupPageComponent>",
                    "defaultValue": "(args: CheckboxGroupPageComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/typography/font-family/typography-font-family.stories.ts": [
                {
                    "name": "Fonts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/typography/font-family/typography-font-family.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/typography/font-family/typography-font-family.stories.ts",
                    "type": "Story<TypographyFontFamilyComponent>",
                    "defaultValue": "(args: TypographyFontFamilyComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.stories.ts": [
                {
                    "name": "NoLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.stories.ts",
                    "type": "",
                    "defaultValue": "SlideToggleTemplate.bind({})"
                },
                {
                    "name": "PageTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.stories.ts",
                    "type": "Story<SlideTogglePageComponent>",
                    "defaultValue": "(args: SlideTogglePageComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "SlideToggleTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.stories.ts",
                    "type": "Story<SlideToggleComponent>",
                    "defaultValue": "(args: SlideToggleComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "Toggles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.stories.ts",
                    "type": "",
                    "defaultValue": "PageTemplate.bind({})"
                },
                {
                    "name": "WithLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.stories.ts",
                    "type": "",
                    "defaultValue": "SlideToggleTemplate.bind({})"
                }
            ],
            "src/stories/input-text/input-text-page/input-text-page.stories.ts": [
                {
                    "name": "Page",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/input-text/input-text-page/input-text-page.stories.ts",
                    "type": "",
                    "defaultValue": "PageTemplate.bind({})"
                },
                {
                    "name": "PageTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/input-text/input-text-page/input-text-page.stories.ts",
                    "type": "Story<InputTextPageComponent>",
                    "defaultValue": "(args: InputTextPageComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/input-text/input-text-table-layout/input-text-table-layout.stories.ts": [
                {
                    "name": "PageTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/input-text/input-text-table-layout/input-text-table-layout.stories.ts",
                    "type": "Story<InputTextTableLayoutComponent>",
                    "defaultValue": "(args: InputTextTableLayoutComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "Table",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/input-text/input-text-table-layout/input-text-table-layout.stories.ts",
                    "type": "",
                    "defaultValue": "PageTemplate.bind({})"
                }
            ],
            "src/stories/colors/color-palette.component.ts": [
                {
                    "name": "palette",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/colors/color-palette.component.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  primary: {\r\n    a: {\r\n      900: {name: 'P-A 900', labelColor: 'white'}\r\n    },\r\n    b: {\r\n      300: { name: 'P-B 300', labelColor: 'white' }\r\n    },\r\n    c: {\r\n      50: {name: 'P-C 50', labelColor: 'black'}\r\n    }\r\n  },\r\n  secondary: {\r\n    a: { 800: { name: 'S-A 800', labelColor: 'white' },\r\n      700: { name: 'S-A 700', labelColor: 'white' },\r\n      600: { name: 'S-A 600', labelColor: 'white' },\r\n      500: { name: 'S-A 500', labelColor: 'black' },\r\n      200: { name: 'S-A 200', labelColor: 'black' },\r\n      100: { name: 'S-A 100', labelColor: 'black' },\r\n      50: { name: 'S-A 50', labelColor: 'black' } },\r\n    b: { 700: { name: 'S-B 700', labelColor: 'white' },\r\n      500: { name: 'S-B 500', labelColor: 'white' },\r\n      400: { name: 'S-B 400', labelColor: 'white' },\r\n      300: { name: 'S-B 300', labelColor: 'white' },\r\n      200: { name: 'S-B 200', labelColor: 'black' },\r\n      100: { name: 'S-B 100', labelColor: 'black' },\r\n      50: { name: 'S-B 500', labelColor: 'black' }\r\n    }\r\n  },\r\n  gray: {\r\n    scale: { 800: { name: 'grayscale 800', labelColor: 'white' },\r\n        700: { name: 'grayscale 700', labelColor: 'white' },\r\n        600: { name: 'grayscale 600', labelColor: 'white' },\r\n        500: { name: 'grayscale 500', labelColor: 'white' },\r\n        400: { name: 'grayscale 400', labelColor: 'black' },\r\n        100: { name: 'grayscale 100', labelColor: 'black' },\r\n        50: { name: 'grayscale 50', labelColor: 'black' },\r\n        5: { name: 'grayscale 5', labelColor: 'black' },\r\n        1: { name: 'grayscale 1', labelColor: 'black' }\r\n    }\r\n  },\r\n  supportive: {\r\n    alert: {\r\n      700: { name: 'Alert 700', labelColor: 'white' },\r\n      500: { name: 'Alert 500', labelColor: 'black' },\r\n      50: { name: 'Alert 50', labelColor: 'black' }\r\n    },\r\n    yellow: { 300: { name: 'Yellow 300', labelColor: 'black' } },\r\n    orange: {\r\n      300: { name: 'Orange 300', labelColor: 'black' },\r\n      50: { name: 'Orange 50', labelColor: 'black' }\r\n    },\r\n    success: {\r\n      400: { name: 'Success 400', labelColor: 'black' },\r\n      50: { name: 'Success 50', labelColor: 'black' }\r\n    },\r\n    dev: {\r\n      a: { name: 'Dev A', labelColor: 'white' },\r\n      b: { name: 'Dev B', labelColor: 'white' },\r\n      c: { name: 'Dev C', labelColor: 'white' }\r\n    }\r\n  }\r\n}"
                }
            ],
            "src/stories/tooltip/tooltip.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/tooltip/tooltip.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/tooltip/tooltip.stories.ts",
                    "type": "Story<TooltipComponent>",
                    "defaultValue": "(args: TooltipComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/typography/styles/typography-styles.stories.ts": [
                {
                    "name": "Styles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/typography/styles/typography-styles.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/typography/styles/typography-styles.stories.ts",
                    "type": "Story<TypographyStylesComponent>",
                    "defaultValue": "(args: TypographyStylesComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/typography/styles/typography-styles.component.ts": [
                {
                    "name": "typographyStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/typography/styles/typography-styles.component.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  h1: {\r\n    title: 'Headline 1',\r\n    description: 'page header level 1',\r\n    sets: {\r\n      family: 'Source Sans Pro - Bold',\r\n      size: '18px',\r\n      letterSpacing: '5%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'Yes',\r\n      useCase: 'Page titles - level 1'\r\n    },\r\n    classes: ['headline-1-bold', 'headline-1-bold headline-contrast']\r\n  },\r\n  h1sub: {\r\n    title: 'Headline 1-sub',\r\n    description: 'page header level 2',\r\n    sets: {\r\n      family: 'Inter - SemiBold',\r\n      size: '16px',\r\n      letterSpacing: '5%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'No',\r\n      useCase: 'Page titles - level 2'\r\n    },\r\n    classes: ['headline-1-sub-semibold']\r\n  },\r\n  h2: {\r\n    title: 'Headline 2',\r\n    description: 'masthead menu',\r\n    sets: {\r\n      family: 'Source Sans Pro - Bold + SemiBold',\r\n      size: '15px',\r\n      letterSpacing: '8%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'Yes',\r\n      useCase: 'Masthead items. SemiBold for default text, Bold for selected, Bold green for Hover.',\r\n    },\r\n    classes: ['headline-2-bold', 'headline-2-semibold', 'headline-2-bold headline-contrast']\r\n  },\r\n  h3: {\r\n    title: 'Headline 3',\r\n    description: 'masthead sub menu',\r\n    sets: {\r\n      family: 'Source Sans Pro - Regular + SemiBold',\r\n      size: '15px',\r\n      letterSpacing: '8%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'No',\r\n      useCase: 'Masthead sub menu items. Regular for default text, SemiBold green for hover and selected.'\r\n    },\r\n    classes: ['headline-3-regular', 'headline-3-semibold headline-contrast']\r\n  },\r\n  h4: {\r\n    title: 'Headline 4',\r\n    description: 'table header, status labels',\r\n    sets: {\r\n      family: 'Inter - Bold',\r\n      size: '12px',\r\n      letterSpacing: '5%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'Yes',\r\n      useCase: 'Table header row (black), Status labels (white)'\r\n    },\r\n    classes: ['headline-4-bold']\r\n  },\r\n  h5: {\r\n    title: 'Headline 5',\r\n    description: 'expansion panel title',\r\n    sets: {\r\n      family: 'Source Sans Pro - Bold',\r\n      size: '15px',\r\n      letterSpacing: '5%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'Yes',\r\n      useCase: 'Expansion panel title',\r\n    },\r\n    classes: ['headline-5-bold']\r\n  },\r\n  h6: {\r\n    title: 'Headline 6',\r\n    description: 'tabs',\r\n    family: 'Inter Bold / Semi Bold',\r\n    sets: {\r\n      size: '12px',\r\n      letterSpacing: '8%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'Yes',\r\n      useCase: 'Default tab - Bold, Selected tab - SemiBold'\r\n    },\r\n    classes: ['headline-6-bold', 'headline-3-semibold']\r\n  },\r\n  h7: {\r\n    title: 'Headline 7',\r\n    description: 'modal title',\r\n    sets: {\r\n      family: 'Inter Bold',\r\n      size: '22px',\r\n      letterSpacing: '0%',\r\n      lineHeight: 'Auto',\r\n      capitals: 'No',\r\n      useCase: 'Modal title',\r\n    },\r\n    classes: ['headline-7-bold']\r\n  },\r\n  p1: {\r\n    title: 'Paragraph 1',\r\n    description: '',\r\n    sets: {\r\n      family: 'Inter - Regular',\r\n      size: '14px',\r\n      letterSpacing: '0%',\r\n      lineHeight: '20px',\r\n      capitals: 'No',\r\n      useCase: 'Paragraphs, Input text',\r\n    },\r\n    classes: ['paragraph-1-default', 'paragraph-1-link', 'paragraph-1-large-label']\r\n  },\r\n  p2: {\r\n    title: 'Paragraph 2',\r\n    description: '',\r\n    sets: {\r\n      family: 'Inter - Regular',\r\n      size: '13px',\r\n      letterSpacing: '0%',\r\n      lineHeight: '20px',\r\n      capitals: 'No',\r\n      useCase: 'Buttons, Actions, Filter, Drop down menu items, Notifications',\r\n    },\r\n    classes: ['paragraph-2-default', 'paragraph-2-link', 'paragraph-2-actions']\r\n  },\r\n  p3: {\r\n    title: 'Paragraph 3',\r\n    description: 'table content',\r\n    sets: {\r\n      family: 'Inter - Regular',\r\n      size: '12px',\r\n      letterSpacing: '0%',\r\n      lineHeight: '20px',\r\n      capitals: 'No',\r\n      useCase: 'Table content, Input top label',\r\n    },\r\n    classes: ['paragraph-3-default', 'paragraph-3-link', 'paragraph-3-medium', 'paragraph-3-semibold']\r\n  }\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/stories/button/button-page/button-type.enum.ts": [
                {
                    "name": "ButtonTypeEnum",
                    "childs": [
                        {
                            "name": "Primary",
                            "value": "primary"
                        },
                        {
                            "name": "Secondary",
                            "value": "secondary"
                        },
                        {
                            "name": "Tertiary",
                            "value": "tertiary"
                        },
                        {
                            "name": "Distructive",
                            "value": "distructive"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/stories/button/button-page/button-type.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button-page/button-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button-page/button-page.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IButtonsPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button-page/button-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "All",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button-page/button-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button-page/button.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IButton",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Distructive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Tertiary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkbox/checkbox-group-page/checkbox-group-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxGroupPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkbox/checkbox-group-page/checkbox-group-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Examples",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkbox/checkbox-group-page/checkbox-group-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PageTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkbox/checkbox-group/checkbox-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkbox/checkbox-group/checkbox-group.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICheckboxGroup",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkbox/checkbox-group/checkbox-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CheckboxGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkbox/checkbox-group/checkbox-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PageTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkbox/checkbox-page/checkbox-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkbox/checkbox-page/checkbox-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Base",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkbox/checkbox-page/checkbox-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PageTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkbox/checkbox.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ICheckbox",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CheckboxTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/checkbox/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/colors/Color-palette.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColorPalette",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/colors/Color-palette.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/colors/color-palette.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorPaletteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/colors/color-palette.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "palette",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/icons/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/stories/input-numeric/input-numeric.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputNumericComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/stories/input-numeric/input-numeric.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IInputNumeric",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/stories/input-text/input-text-page/input-text-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputTextPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/input-text/input-text-page/input-text-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Page",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/input-text/input-text-page/input-text-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PageTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/input-text/input-text-table-layout/input-text-table-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputTextTableLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/input-text/input-text-table-layout/input-text-table-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PageTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/input-text/input-text-table-layout/input-text-table-layout.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Table",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/input-text/input-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/stories/input-text/input-text.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IInputText",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/stories/input-text/input-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ErrorMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/input-text/input-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ErrorState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/input-text/input-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/input-text/input-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/input-text/input-text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/radio-button/radio-button-group/radio-button-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonGroup",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/stories/radio-button/radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/radio-button/radio-button.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRadioButton",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SlideTogglePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PageTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SlideToggleTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Toggles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/slide-toggle/slide-toggle-page/slide-toggle-page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/slide-toggle/slide-toggle.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SlideToggleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/tooltip/tooltip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/tooltip/tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/typography/font-family/typography-font-family.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyFontFamilyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/typography/font-family/typography-font-family.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Fonts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/typography/font-family/typography-font-family.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/typography/styles/typography-styles.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyStylesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/stories/typography/styles/typography-styles.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "typographyStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/typography/styles/typography-styles.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Styles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/typography/styles/typography-styles.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}