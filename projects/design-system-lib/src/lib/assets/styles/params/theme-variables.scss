@import '../../../../../../../node_modules/@angular/material/theming';

@include mat-core();

//patch according to the design colors
$mat-blue: (
  50: #EDF0FA, //fixed
  100: #DCE4FF, //fixed
  200: #C9D5FF, //fixed
  300: #64b5f6,
  400: #42a5f5,
  500: #88A0F6, //fixed
  600: #6A83DC, //fixed
  700: #4132C8, //fixed
  800: #362B97, //fixed
  900: #0d47a1,
  A100: #82b1ff,
  A200: #448aff,
  A400: #2979ff,
  A700: #2962ff,
  contrast: (
    50: $dark-primary-text,
    100: $dark-primary-text,
    200: $dark-primary-text,
    300: $dark-primary-text,
    400: $dark-primary-text,
    500: $light-primary-text,
    600: $light-primary-text,
    700: $light-primary-text,
    800: $light-primary-text,
    900: $light-primary-text,
    A100: $dark-primary-text,
    A200: $light-primary-text,
    A400: $light-primary-text,
    A700: $light-primary-text,
  )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($mat-blue, 700, 300, 900);
$candy-app-accent:  mat-palette($mat-cyan, 600, 200, 800);

// The warn palette is optional (defaults to red).
$candy-app-warn:    mat-palette($mat-red, 800, 400,900);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);

/*
 * Application global variables.
 */
